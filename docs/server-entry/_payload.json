[{"data":1,"prerenderedAt":1216},["ShallowReactive",2],{"navigation":3,"-docs-server-entry":216,"-docs-server-entry-surround":1211},[4,83,208,213],{"title":5,"path":6,"stem":7,"children":8,"icon":82},"","/docs","1.docs/1.index",[9,12,17,22,27,32,37,42,47,52,57,62,67,72,77],{"title":10,"path":6,"stem":7,"icon":11},"介绍","i-lucide-compass",{"title":13,"path":14,"stem":15,"icon":16},"快速开始","/docs/quick-start","1.docs/2.quick-start","i-lucide-zap",{"title":18,"path":19,"stem":20,"icon":21},"渲染器","/docs/renderer","1.docs/4.renderer","ri:layout-masonry-line",{"title":23,"path":24,"stem":25,"icon":26},"服务器路由","/docs/routing","1.docs/5.routing","ri:direction-line",{"title":28,"path":29,"stem":30,"icon":31},"资源","/docs/assets","1.docs/50.assets","ri:image-2-line",{"title":33,"path":34,"stem":35,"icon":36},"配置","/docs/configuration","1.docs/50.configuration","ri:settings-3-line",{"title":38,"path":39,"stem":40,"icon":41},"数据库","/docs/database","1.docs/50.database","ri:database-2-line",{"title":43,"path":44,"stem":45,"icon":46},"生命周期","/docs/lifecycle","1.docs/50.lifecycle","i-lucide-layers",{"title":48,"path":49,"stem":50,"icon":51},"插件","/docs/plugins","1.docs/50.plugins","ri:plug-line",{"title":53,"path":54,"stem":55,"icon":56},"任务","/docs/tasks","1.docs/50.tasks","codicon:run-all",{"title":58,"path":59,"stem":60,"icon":61},"服务器入口","/docs/server-entry","1.docs/6.server-entry","ri:server-line",{"title":63,"path":64,"stem":65,"icon":66},"缓存","/docs/cache","1.docs/7.cache","ri:speed-line",{"title":68,"path":69,"stem":70,"icon":71},"KV 存储","/docs/storage","1.docs/8.storage","carbon:datastore",{"title":73,"path":74,"stem":75,"icon":76},"迁移指南","/docs/migration","1.docs/99.migration","ri:arrow-right-up-line",{"title":78,"path":79,"stem":80,"icon":81},"夜间通道","/docs/nightly","1.docs/99.nightly","ri:moon-fill","i-lucide-book-open",{"title":84,"path":85,"stem":86,"children":87,"icon":89},"概述","/deploy","2.deploy/0.index",[88,90,111],{"title":84,"path":85,"stem":86,"icon":89},"ri:upload-cloud-2-line",{"title":91,"path":92,"stem":93,"children":94,"page":110},"Runtimes","/deploy/runtimes","2.deploy/10.runtimes",[95,100,105],{"title":96,"path":97,"stem":98,"icon":99},"Node.js","/deploy/runtimes/node","2.deploy/10.runtimes/1.node","akar-icons:node-fill",{"title":101,"path":102,"stem":103,"icon":104},"Bun","/deploy/runtimes/bun","2.deploy/10.runtimes/bun","simple-icons:bun",{"title":106,"path":107,"stem":108,"icon":109},"Deno","/deploy/runtimes/deno","2.deploy/10.runtimes/deno","simple-icons:deno",false,{"title":112,"path":113,"stem":114,"children":115,"page":110},"Providers","/deploy/providers","2.deploy/20.providers",[116,120,124,128,132,136,140,144,148,152,156,160,164,168,172,176,180,184,188,192,196,200,204],{"title":117,"path":118,"stem":119},"Alwaysdata","/deploy/providers/alwaysdata","2.deploy/20.providers/alwaysdata",{"title":121,"path":122,"stem":123},"AWS Lambda","/deploy/providers/aws","2.deploy/20.providers/aws",{"title":125,"path":126,"stem":127},"AWS Amplify","/deploy/providers/aws-amplify","2.deploy/20.providers/aws-amplify",{"title":129,"path":130,"stem":131},"Azure","/deploy/providers/azure","2.deploy/20.providers/azure",{"title":133,"path":134,"stem":135},"Cleavr","/deploy/providers/cleavr","2.deploy/20.providers/cleavr",{"title":137,"path":138,"stem":139},"Cloudflare","/deploy/providers/cloudflare","2.deploy/20.providers/cloudflare",{"title":141,"path":142,"stem":143},"Deno Deploy","/deploy/providers/deno-deploy","2.deploy/20.providers/deno-deploy",{"title":145,"path":146,"stem":147},"DigitalOcean","/deploy/providers/digitalocean","2.deploy/20.providers/digitalocean",{"title":149,"path":150,"stem":151},"Firebase","/deploy/providers/firebase","2.deploy/20.providers/firebase",{"title":153,"path":154,"stem":155},"Flightcontrol","/deploy/providers/flightcontrol","2.deploy/20.providers/flightcontrol",{"title":157,"path":158,"stem":159},"Genezio","/deploy/providers/genezio","2.deploy/20.providers/genezio",{"title":161,"path":162,"stem":163},"GitHub Pages","/deploy/providers/github-pages","2.deploy/20.providers/github-pages",{"title":165,"path":166,"stem":167},"GitLab Pages","/deploy/providers/gitlab-pages","2.deploy/20.providers/gitlab-pages",{"title":169,"path":170,"stem":171},"Heroku","/deploy/providers/heroku","2.deploy/20.providers/heroku",{"title":173,"path":174,"stem":175},"IIS","/deploy/providers/iis","2.deploy/20.providers/iis",{"title":177,"path":178,"stem":179},"Koyeb","/deploy/providers/koyeb","2.deploy/20.providers/koyeb",{"title":181,"path":182,"stem":183},"Netlify","/deploy/providers/netlify","2.deploy/20.providers/netlify",{"title":185,"path":186,"stem":187},"Platform.sh","/deploy/providers/platform-sh","2.deploy/20.providers/platform-sh",{"title":189,"path":190,"stem":191},"Render.com","/deploy/providers/render","2.deploy/20.providers/render",{"title":193,"path":194,"stem":195},"StormKit","/deploy/providers/stormkit","2.deploy/20.providers/stormkit",{"title":197,"path":198,"stem":199},"Vercel","/deploy/providers/vercel","2.deploy/20.providers/vercel",{"title":201,"path":202,"stem":203},"Zeabur","/deploy/providers/zeabur","2.deploy/20.providers/zeabur",{"title":205,"path":206,"stem":207},"Zerops","/deploy/providers/zerops","2.deploy/20.providers/zerops",{"title":33,"path":209,"stem":210,"children":211,"icon":36},"/config","3.config/0.index",[212],{"title":33,"path":209,"stem":210,"icon":36},{"title":5,"path":214,"stem":215},"/","index",{"id":217,"title":218,"body":219,"description":1206,"extension":1090,"meta":1207,"navigation":1208,"path":59,"seo":1209,"stem":60,"__hash__":1210},"content/1.docs/6.server-entry.md","Nitro 服务器入口",{"type":220,"value":221,"toc":1197,"icon":61},"minimark",[222,229,238,247,264,267,533,546,549,571,574,595,856,859,866,913,916,923,1071,1081,1083,1086,1144,1152,1156,1159,1193],[223,224,225],"warning",{},[226,227,228],"p",{},"Nitro v3 Alpha 文档仍在开发中 — 期待更新、不完善之处以及偶尔的错误。",[226,230,231,232,237],{},"服务器入口是 Nitro 中的一个特殊处理器，作为全局中间件，为所有传入请求运行，且在路由匹配之前执行（参见 ",[233,234,236],"a",{"href":235},"/docs/architecture#request-lifecycle","请求生命周期","）。它通常用于跨模块关注点，如认证、日志记录、请求预处理或创建自定义路由逻辑。",[239,240,242,243],"h2",{"id":241},"自动检测的-serverts","自动检测的 ",[244,245,246],"code",{},"server.ts",[226,248,249,250,252,253,256,257,256,260,263],{},"默认情况下，Nitro 会自动在项目根目录或扫描目录中查找 ",[244,251,246],{},"（或 ",[244,254,255],{},".js","、",[244,258,259],{},".mjs",[244,261,262],{},".tsx"," 等）文件。",[226,265,266],{},"如果找到，Nitro 会将其作为服务器入口，并对所有传入请求运行。",[268,269,270,464],"code-group",{},[271,272,276],"pre",{"className":273,"code":274,"filename":246,"language":275,"meta":5,"style":5},"language-ts shiki shiki-themes github-light github-dark github-dark","export default {\n  async fetch(req: Request) {\n    const url = new URL(req.url);\n\n    // 处理特定路由\n    if (url.pathname === \"/health\") {\n      return new Response(\"OK\", {\n        status: 200,\n        headers: { \"content-type\": \"text/plain\" }\n      });\n    }\n\n    // 给所有请求添加自定义头\n    // 返回空(undefined)以继续执行下一个处理器\n  }\n}\n","ts",[244,277,278,294,320,342,349,356,374,393,405,423,429,435,440,446,452,458],{"__ignoreMap":5},[279,280,283,287,290],"span",{"class":281,"line":282},"line",1,[279,284,286],{"class":285},"so5gQ","export",[279,288,289],{"class":285}," default",[279,291,293],{"class":292},"slsVL"," {\n",[279,295,297,300,304,307,311,314,317],{"class":281,"line":296},2,[279,298,299],{"class":285},"  async",[279,301,303],{"class":302},"shcOC"," fetch",[279,305,306],{"class":292},"(",[279,308,310],{"class":309},"sQHwn","req",[279,312,313],{"class":285},":",[279,315,316],{"class":302}," Request",[279,318,319],{"class":292},") {\n",[279,321,323,326,330,333,336,339],{"class":281,"line":322},3,[279,324,325],{"class":285},"    const",[279,327,329],{"class":328},"suiK_"," url",[279,331,332],{"class":285}," =",[279,334,335],{"class":285}," new",[279,337,338],{"class":302}," URL",[279,340,341],{"class":292},"(req.url);\n",[279,343,345],{"class":281,"line":344},4,[279,346,348],{"emptyLinePlaceholder":347},true,"\n",[279,350,352],{"class":281,"line":351},5,[279,353,355],{"class":354},"sCsY4","    // 处理特定路由\n",[279,357,359,362,365,368,372],{"class":281,"line":358},6,[279,360,361],{"class":285},"    if",[279,363,364],{"class":292}," (url.pathname ",[279,366,367],{"class":285},"===",[279,369,371],{"class":370},"sfrk1"," \"/health\"",[279,373,319],{"class":292},[279,375,377,380,382,385,387,390],{"class":281,"line":376},7,[279,378,379],{"class":285},"      return",[279,381,335],{"class":285},[279,383,384],{"class":302}," Response",[279,386,306],{"class":292},[279,388,389],{"class":370},"\"OK\"",[279,391,392],{"class":292},", {\n",[279,394,396,399,402],{"class":281,"line":395},8,[279,397,398],{"class":292},"        status: ",[279,400,401],{"class":328},"200",[279,403,404],{"class":292},",\n",[279,406,408,411,414,417,420],{"class":281,"line":407},9,[279,409,410],{"class":292},"        headers: { ",[279,412,413],{"class":370},"\"content-type\"",[279,415,416],{"class":292},": ",[279,418,419],{"class":370},"\"text/plain\"",[279,421,422],{"class":292}," }\n",[279,424,426],{"class":281,"line":425},10,[279,427,428],{"class":292},"      });\n",[279,430,432],{"class":281,"line":431},11,[279,433,434],{"class":292},"    }\n",[279,436,438],{"class":281,"line":437},12,[279,439,348],{"emptyLinePlaceholder":347},[279,441,443],{"class":281,"line":442},13,[279,444,445],{"class":354},"    // 给所有请求添加自定义头\n",[279,447,449],{"class":281,"line":448},14,[279,450,451],{"class":354},"    // 返回空(undefined)以继续执行下一个处理器\n",[279,453,455],{"class":281,"line":454},15,[279,456,457],{"class":292},"  }\n",[279,459,461],{"class":281,"line":460},16,[279,462,463],{"class":292},"}\n",[271,465,468],{"className":273,"code":466,"filename":467,"language":275,"meta":5,"style":5},"import { defineHandler } from \"nitro/h3\";\n\nexport default defineHandler((event) => {\n  return { hello: \"API\" };\n});\n","routes/api/hello.ts",[244,469,470,487,491,514,528],{"__ignoreMap":5},[279,471,472,475,478,481,484],{"class":281,"line":282},[279,473,474],{"class":285},"import",[279,476,477],{"class":292}," { defineHandler } ",[279,479,480],{"class":285},"from",[279,482,483],{"class":370}," \"nitro/h3\"",[279,485,486],{"class":292},";\n",[279,488,489],{"class":281,"line":296},[279,490,348],{"emptyLinePlaceholder":347},[279,492,493,495,497,500,503,506,509,512],{"class":281,"line":322},[279,494,286],{"class":285},[279,496,289],{"class":285},[279,498,499],{"class":302}," defineHandler",[279,501,502],{"class":292},"((",[279,504,505],{"class":309},"event",[279,507,508],{"class":292},") ",[279,510,511],{"class":285},"=>",[279,513,293],{"class":292},[279,515,516,519,522,525],{"class":281,"line":344},[279,517,518],{"class":285},"  return",[279,520,521],{"class":292}," { hello: ",[279,523,524],{"class":370},"\"API\"",[279,526,527],{"class":292}," };\n",[279,529,530],{"class":281,"line":351},[279,531,532],{"class":292},"});\n",[534,535,536],"tip",{},[226,537,538,539,541,542,545],{},"检测到 ",[244,540,246],{}," 后，Nitro 会在终端自动打印：",[244,543,544],{},"Using \\","server.ts` as server entry.`",[226,547,548],{},"在此设置下：",[550,551,552,559,565],"ul",{},[553,554,555,558],"li",{},[244,556,557],{},"/health"," → 由服务器入口处理",[553,560,561,564],{},[244,562,563],{},"/api/hello"," → 服务器入口先运行，然后执行 API 路由",[553,566,567,570],{},[244,568,569],{},"/about"," 等 → 服务器入口先运行，随后继续路由或渲染器处理",[239,572,573],{"id":573},"框架兼容性",[226,575,576,577,256,583,588,589,594],{},"服务器入口是集成其他框架（如 ",[233,578,582],{"href":579,"rel":580},"https://elysiajs.com/",[581],"nofollow","Elysia",[233,584,587],{"href":585,"rel":586},"https://hono.dev/",[581],"Hono"," 或 ",[233,590,593],{"href":591,"rel":592},"https://h3.dev/",[581],"H3","）的绝佳方式。",[596,597,598,684,776],"tabs",{},[599,600,602],"tabs-item",{"icon":601,"label":593},"i-undocs-h3",[271,603,605],{"className":273,"code":604,"filename":246,"language":275,"meta":5,"style":5},"import { H3 } from \"h3\";\n\nconst app = new H3()\n\napp.get(\"/\", () => \"⚡️ Hello from H3!\");\n\nexport default app;\n",[244,606,607,621,625,643,647,671,675],{"__ignoreMap":5},[279,608,609,611,614,616,619],{"class":281,"line":282},[279,610,474],{"class":285},[279,612,613],{"class":292}," { H3 } ",[279,615,480],{"class":285},[279,617,618],{"class":370}," \"h3\"",[279,620,486],{"class":292},[279,622,623],{"class":281,"line":296},[279,624,348],{"emptyLinePlaceholder":347},[279,626,627,630,633,635,637,640],{"class":281,"line":322},[279,628,629],{"class":285},"const",[279,631,632],{"class":328}," app",[279,634,332],{"class":285},[279,636,335],{"class":285},[279,638,639],{"class":302}," H3",[279,641,642],{"class":292},"()\n",[279,644,645],{"class":281,"line":344},[279,646,348],{"emptyLinePlaceholder":347},[279,648,649,652,655,657,660,663,665,668],{"class":281,"line":351},[279,650,651],{"class":292},"app.",[279,653,654],{"class":302},"get",[279,656,306],{"class":292},[279,658,659],{"class":370},"\"/\"",[279,661,662],{"class":292},", () ",[279,664,511],{"class":285},[279,666,667],{"class":370}," \"⚡️ Hello from H3!\"",[279,669,670],{"class":292},");\n",[279,672,673],{"class":281,"line":358},[279,674,348],{"emptyLinePlaceholder":347},[279,676,677,679,681],{"class":281,"line":376},[279,678,286],{"class":285},[279,680,289],{"class":285},[279,682,683],{"class":292}," app;\n",[599,685,687],{"icon":686,"label":587},"i-undocs-hono",[271,688,690],{"className":273,"code":689,"filename":246,"language":275,"meta":5,"style":5},"import { Hono } from \"hono\";\n\nconst app = new Hono();\n\napp.get(\"/\", (c) => c.text(\"🔥 Hello from Hono!\"));\n\nexport default app;\n",[244,691,692,706,710,726,730,764,768],{"__ignoreMap":5},[279,693,694,696,699,701,704],{"class":281,"line":282},[279,695,474],{"class":285},[279,697,698],{"class":292}," { Hono } ",[279,700,480],{"class":285},[279,702,703],{"class":370}," \"hono\"",[279,705,486],{"class":292},[279,707,708],{"class":281,"line":296},[279,709,348],{"emptyLinePlaceholder":347},[279,711,712,714,716,718,720,723],{"class":281,"line":322},[279,713,629],{"class":285},[279,715,632],{"class":328},[279,717,332],{"class":285},[279,719,335],{"class":285},[279,721,722],{"class":302}," Hono",[279,724,725],{"class":292},"();\n",[279,727,728],{"class":281,"line":344},[279,729,348],{"emptyLinePlaceholder":347},[279,731,732,734,736,738,740,743,746,748,750,753,756,758,761],{"class":281,"line":351},[279,733,651],{"class":292},[279,735,654],{"class":302},[279,737,306],{"class":292},[279,739,659],{"class":370},[279,741,742],{"class":292},", (",[279,744,745],{"class":309},"c",[279,747,508],{"class":292},[279,749,511],{"class":285},[279,751,752],{"class":292}," c.",[279,754,755],{"class":302},"text",[279,757,306],{"class":292},[279,759,760],{"class":370},"\"🔥 Hello from Hono!\"",[279,762,763],{"class":292},"));\n",[279,765,766],{"class":281,"line":358},[279,767,348],{"emptyLinePlaceholder":347},[279,769,770,772,774],{"class":281,"line":376},[279,771,286],{"class":285},[279,773,289],{"class":285},[279,775,683],{"class":292},[599,777,779],{"icon":778,"label":582},"i-undocs-elysia",[271,780,782],{"className":273,"code":781,"filename":246,"language":275,"meta":5,"style":5},"import { Elysia } from \"elysia\";\n\nconst app = new Elysia();\n\napp.get(\"/\", (c) => \"🦊 Hello from Elysia!\");\n\nexport default app;\n",[244,783,784,798,802,817,821,844,848],{"__ignoreMap":5},[279,785,786,788,791,793,796],{"class":281,"line":282},[279,787,474],{"class":285},[279,789,790],{"class":292}," { Elysia } ",[279,792,480],{"class":285},[279,794,795],{"class":370}," \"elysia\"",[279,797,486],{"class":292},[279,799,800],{"class":281,"line":296},[279,801,348],{"emptyLinePlaceholder":347},[279,803,804,806,808,810,812,815],{"class":281,"line":322},[279,805,629],{"class":285},[279,807,632],{"class":328},[279,809,332],{"class":285},[279,811,335],{"class":285},[279,813,814],{"class":302}," Elysia",[279,816,725],{"class":292},[279,818,819],{"class":281,"line":344},[279,820,348],{"emptyLinePlaceholder":347},[279,822,823,825,827,829,831,833,835,837,839,842],{"class":281,"line":351},[279,824,651],{"class":292},[279,826,654],{"class":302},[279,828,306],{"class":292},[279,830,659],{"class":370},[279,832,742],{"class":292},[279,834,745],{"class":309},[279,836,508],{"class":292},[279,838,511],{"class":285},[279,840,841],{"class":370}," \"🦊 Hello from Elysia!\"",[279,843,670],{"class":292},[279,845,846],{"class":281,"line":358},[279,847,348],{"emptyLinePlaceholder":347},[279,849,850,852,854],{"class":281,"line":376},[279,851,286],{"class":285},[279,853,289],{"class":285},[279,855,683],{"class":292},[239,857,858],{"id":858},"自定义服务器入口文件",[226,860,861,862,865],{},"你可以通过 Nitro 配置中的 ",[244,863,864],{},"serverEntry"," 选项指定自定义服务器入口文件。",[271,867,870],{"className":273,"code":868,"filename":869,"language":275,"meta":5,"style":5},"import { defineNitroConfig } from 'nitro/config'\n\nexport default defineNitroConfig({\n  serverEntry: './nitro.server.ts'\n})\n","nitro.config.ts",[244,871,872,884,888,900,908],{"__ignoreMap":5},[279,873,874,876,879,881],{"class":281,"line":282},[279,875,474],{"class":285},[279,877,878],{"class":292}," { defineNitroConfig } ",[279,880,480],{"class":285},[279,882,883],{"class":370}," 'nitro/config'\n",[279,885,886],{"class":281,"line":296},[279,887,348],{"emptyLinePlaceholder":347},[279,889,890,892,894,897],{"class":281,"line":322},[279,891,286],{"class":285},[279,893,289],{"class":285},[279,895,896],{"class":302}," defineNitroConfig",[279,898,899],{"class":292},"({\n",[279,901,902,905],{"class":281,"line":344},[279,903,904],{"class":292},"  serverEntry: ",[279,906,907],{"class":370},"'./nitro.server.ts'\n",[279,909,910],{"class":281,"line":351},[279,911,912],{"class":292},"})\n",[239,914,915],{"id":915},"使用事件处理器",[226,917,918,919,922],{},"你也可以使用 ",[244,920,921],{},"defineHandler"," 导出事件处理器，以获得更好的类型推断和访问 h3 事件对象：",[271,924,926],{"className":273,"code":925,"filename":246,"language":275,"meta":5,"style":5},"import { defineHandler } from \"nitro/h3\";\n\nexport default defineHandler((event) => {\n  // 添加自定义上下文\n  event.context.requestId = crypto.randomUUID();\n  event.context.timestamp = Date.now();\n\n  // 记录请求日志\n  console.log(`[${event.context.requestId}] ${event.method} ${event.path}`);\n\n  // 继续执行下一个处理器（不返回任何内容）\n});\n",[244,927,928,940,944,962,967,983,998,1002,1007,1058,1062,1067],{"__ignoreMap":5},[279,929,930,932,934,936,938],{"class":281,"line":282},[279,931,474],{"class":285},[279,933,477],{"class":292},[279,935,480],{"class":285},[279,937,483],{"class":370},[279,939,486],{"class":292},[279,941,942],{"class":281,"line":296},[279,943,348],{"emptyLinePlaceholder":347},[279,945,946,948,950,952,954,956,958,960],{"class":281,"line":322},[279,947,286],{"class":285},[279,949,289],{"class":285},[279,951,499],{"class":302},[279,953,502],{"class":292},[279,955,505],{"class":309},[279,957,508],{"class":292},[279,959,511],{"class":285},[279,961,293],{"class":292},[279,963,964],{"class":281,"line":344},[279,965,966],{"class":354},"  // 添加自定义上下文\n",[279,968,969,972,975,978,981],{"class":281,"line":351},[279,970,971],{"class":292},"  event.context.requestId ",[279,973,974],{"class":285},"=",[279,976,977],{"class":292}," crypto.",[279,979,980],{"class":302},"randomUUID",[279,982,725],{"class":292},[279,984,985,988,990,993,996],{"class":281,"line":358},[279,986,987],{"class":292},"  event.context.timestamp ",[279,989,974],{"class":285},[279,991,992],{"class":292}," Date.",[279,994,995],{"class":302},"now",[279,997,725],{"class":292},[279,999,1000],{"class":281,"line":376},[279,1001,348],{"emptyLinePlaceholder":347},[279,1003,1004],{"class":281,"line":395},[279,1005,1006],{"class":354},"  // 记录请求日志\n",[279,1008,1009,1012,1015,1017,1020,1022,1025,1028,1030,1033,1036,1038,1040,1043,1046,1048,1050,1053,1056],{"class":281,"line":407},[279,1010,1011],{"class":292},"  console.",[279,1013,1014],{"class":302},"log",[279,1016,306],{"class":292},[279,1018,1019],{"class":370},"`[${",[279,1021,505],{"class":292},[279,1023,1024],{"class":370},".",[279,1026,1027],{"class":292},"context",[279,1029,1024],{"class":370},[279,1031,1032],{"class":292},"requestId",[279,1034,1035],{"class":370},"}] ${",[279,1037,505],{"class":292},[279,1039,1024],{"class":370},[279,1041,1042],{"class":292},"method",[279,1044,1045],{"class":370},"} ${",[279,1047,505],{"class":292},[279,1049,1024],{"class":370},[279,1051,1052],{"class":292},"path",[279,1054,1055],{"class":370},"}`",[279,1057,670],{"class":292},[279,1059,1060],{"class":281,"line":425},[279,1061,348],{"emptyLinePlaceholder":347},[279,1063,1064],{"class":281,"line":431},[279,1065,1066],{"class":354},"  // 继续执行下一个处理器（不返回任何内容）\n",[279,1068,1069],{"class":281,"line":437},[279,1070,532],{"class":292},[1072,1073,1074],"important",{},[226,1075,1076,1077,1080],{},"如果你的服务器入口返回 ",[244,1078,1079],{},"undefined"," 或不返回任何内容，请求将继续由路由和渲染器处理；如果返回响应，则请求生命周期在此终止。",[239,1082,236],{"id":236},[226,1084,1085],{},"服务器入口作为全局中间件栈的一部分被调用，位置在路由规则之后、路由处理器之前：",[271,1087,1091],{"className":1088,"code":1089,"language":1090,"meta":5,"style":5},"language-md shiki shiki-themes github-light github-dark github-dark","1. 服务器钩子：`request`\n2. 路由规则（头信息、重定向等）\n3. 全局中间件（middleware/）\n4. 服务器入口 ← 你现在所在的位置\n5. 路由（routes/）\n6. 渲染器（renderer.ts 或 index.html）\n","md",[244,1092,1093,1104,1112,1120,1128,1136],{"__ignoreMap":5},[279,1094,1095,1098,1101],{"class":281,"line":282},[279,1096,1097],{"class":309},"1.",[279,1099,1100],{"class":292}," 服务器钩子：",[279,1102,1103],{"class":328},"`request`\n",[279,1105,1106,1109],{"class":281,"line":296},[279,1107,1108],{"class":309},"2.",[279,1110,1111],{"class":292}," 路由规则（头信息、重定向等）\n",[279,1113,1114,1117],{"class":281,"line":322},[279,1115,1116],{"class":309},"3.",[279,1118,1119],{"class":292}," 全局中间件（middleware/）\n",[279,1121,1122,1125],{"class":281,"line":344},[279,1123,1124],{"class":309},"4.",[279,1126,1127],{"class":292}," 服务器入口 ← 你现在所在的位置\n",[279,1129,1130,1133],{"class":281,"line":351},[279,1131,1132],{"class":309},"5.",[279,1134,1135],{"class":292}," 路由（routes/）\n",[279,1137,1138,1141],{"class":281,"line":358},[279,1139,1140],{"class":309},"6.",[279,1142,1143],{"class":292}," 渲染器（renderer.ts 或 index.html）\n",[226,1145,1146,1147,1151],{},"可将服务器入口视为路由匹配前运行的",[1148,1149,1150],"strong",{},"最后一个全局中间件","。",[1153,1154],"read-more",{"title":1155,"to":235},"架构 > 请求生命周期",[239,1157,1158],{"id":1158},"最佳实践",[550,1160,1161,1168,1174,1177,1180,1187,1190],{},[553,1162,1163,1164,1167],{},"使用服务器入口处理影响",[1148,1165,1166],{},"所有路由","的跨模块关注点",[553,1169,1170,1171,1173],{},"返回 ",[244,1172,1079],{}," 以继续处理，返回响应则终止流程",[553,1175,1176],{},"保持服务器入口逻辑精简以获得更好性能",[553,1178,1179],{},"使用全局中间件处理模块化关注点，而非单一庞大服务器入口",[553,1181,1182,1183,1186],{},"可考虑使用 ",[233,1184,1185],{"href":49},"Nitro 插件"," 进行初始化逻辑",[553,1188,1189],{},"避免在服务器入口中进行重量级计算（它会为每个请求运行）",[553,1191,1192],{},"不要在服务器入口处理特定路由逻辑（更高效的方式是使用路由处理器）",[1194,1195,1196],"style",{},"html pre.shiki code .so5gQ, html code.shiki .so5gQ{--shiki-light:#D73A49;--shiki-default:#F97583;--shiki-dark:#F97583}html pre.shiki code .slsVL, html code.shiki .slsVL{--shiki-light:#24292E;--shiki-default:#E1E4E8;--shiki-dark:#E1E4E8}html pre.shiki code .shcOC, html code.shiki .shcOC{--shiki-light:#6F42C1;--shiki-default:#B392F0;--shiki-dark:#B392F0}html pre.shiki code .sQHwn, html code.shiki .sQHwn{--shiki-light:#E36209;--shiki-default:#FFAB70;--shiki-dark:#FFAB70}html pre.shiki code .suiK_, html code.shiki .suiK_{--shiki-light:#005CC5;--shiki-default:#79B8FF;--shiki-dark:#79B8FF}html pre.shiki code .sCsY4, html code.shiki .sCsY4{--shiki-light:#6A737D;--shiki-default:#6A737D;--shiki-dark:#6A737D}html pre.shiki code .sfrk1, html code.shiki .sfrk1{--shiki-light:#032F62;--shiki-default:#9ECBFF;--shiki-dark:#9ECBFF}html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":5,"searchDepth":296,"depth":296,"links":1198},[1199,1201,1202,1203,1204,1205],{"id":241,"depth":296,"text":1200},"自动检测的 server.ts",{"id":573,"depth":296,"text":573},{"id":858,"depth":296,"text":858},{"id":915,"depth":296,"text":915},{"id":236,"depth":296,"text":236},{"id":1158,"depth":296,"text":1158},"使用服务器入口可创建全局中间件，该中间件会在所有路由匹配之前运行。",{"icon":61},{"title":58,"icon":61},{"title":218,"description":1206},"7q4SCrol_MnrX1bkHdsVuv63kk7cZZ_UpPRPAnRQle4",[1212,1214],{"title":53,"path":54,"stem":55,"description":1213,"icon":56,"children":-1},"Nitro 任务允许在运行时进行开关操作。",{"title":63,"path":64,"stem":65,"description":1215,"icon":66,"children":-1},"Nitro 提供了一种构建在存储层之上的缓存系统。",1761554644072]