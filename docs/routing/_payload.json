[{"data":1,"prerenderedAt":1877},["ShallowReactive",2],{"navigation":3,"-docs-routing":216,"-docs-routing-surround":1873},[4,83,208,213],{"title":5,"path":6,"stem":7,"children":8,"icon":82},"","/docs","1.docs/1.index",[9,12,17,22,27,32,37,42,47,52,57,62,67,72,77],{"title":10,"path":6,"stem":7,"icon":11},"介绍","i-lucide-compass",{"title":13,"path":14,"stem":15,"icon":16},"快速开始","/docs/quick-start","1.docs/2.quick-start","i-lucide-zap",{"title":18,"path":19,"stem":20,"icon":21},"渲染器","/docs/renderer","1.docs/4.renderer","ri:layout-masonry-line",{"title":23,"path":24,"stem":25,"icon":26},"服务器路由","/docs/routing","1.docs/5.routing","ri:direction-line",{"title":28,"path":29,"stem":30,"icon":31},"资源","/docs/assets","1.docs/50.assets","ri:image-2-line",{"title":33,"path":34,"stem":35,"icon":36},"配置","/docs/configuration","1.docs/50.configuration","ri:settings-3-line",{"title":38,"path":39,"stem":40,"icon":41},"数据库","/docs/database","1.docs/50.database","ri:database-2-line",{"title":43,"path":44,"stem":45,"icon":46},"生命周期","/docs/lifecycle","1.docs/50.lifecycle","i-lucide-layers",{"title":48,"path":49,"stem":50,"icon":51},"插件","/docs/plugins","1.docs/50.plugins","ri:plug-line",{"title":53,"path":54,"stem":55,"icon":56},"任务","/docs/tasks","1.docs/50.tasks","codicon:run-all",{"title":58,"path":59,"stem":60,"icon":61},"服务器入口","/docs/server-entry","1.docs/6.server-entry","ri:server-line",{"title":63,"path":64,"stem":65,"icon":66},"缓存","/docs/cache","1.docs/7.cache","ri:speed-line",{"title":68,"path":69,"stem":70,"icon":71},"KV 存储","/docs/storage","1.docs/8.storage","carbon:datastore",{"title":73,"path":74,"stem":75,"icon":76},"迁移指南","/docs/migration","1.docs/99.migration","ri:arrow-right-up-line",{"title":78,"path":79,"stem":80,"icon":81},"夜间通道","/docs/nightly","1.docs/99.nightly","ri:moon-fill","i-lucide-book-open",{"title":84,"path":85,"stem":86,"children":87,"icon":89},"概述","/deploy","2.deploy/0.index",[88,90,111],{"title":84,"path":85,"stem":86,"icon":89},"ri:upload-cloud-2-line",{"title":91,"path":92,"stem":93,"children":94,"page":110},"Runtimes","/deploy/runtimes","2.deploy/10.runtimes",[95,100,105],{"title":96,"path":97,"stem":98,"icon":99},"Node.js","/deploy/runtimes/node","2.deploy/10.runtimes/1.node","akar-icons:node-fill",{"title":101,"path":102,"stem":103,"icon":104},"Bun","/deploy/runtimes/bun","2.deploy/10.runtimes/bun","simple-icons:bun",{"title":106,"path":107,"stem":108,"icon":109},"Deno","/deploy/runtimes/deno","2.deploy/10.runtimes/deno","simple-icons:deno",false,{"title":112,"path":113,"stem":114,"children":115,"page":110},"Providers","/deploy/providers","2.deploy/20.providers",[116,120,124,128,132,136,140,144,148,152,156,160,164,168,172,176,180,184,188,192,196,200,204],{"title":117,"path":118,"stem":119},"Alwaysdata","/deploy/providers/alwaysdata","2.deploy/20.providers/alwaysdata",{"title":121,"path":122,"stem":123},"AWS Lambda","/deploy/providers/aws","2.deploy/20.providers/aws",{"title":125,"path":126,"stem":127},"AWS Amplify","/deploy/providers/aws-amplify","2.deploy/20.providers/aws-amplify",{"title":129,"path":130,"stem":131},"Azure","/deploy/providers/azure","2.deploy/20.providers/azure",{"title":133,"path":134,"stem":135},"Cleavr","/deploy/providers/cleavr","2.deploy/20.providers/cleavr",{"title":137,"path":138,"stem":139},"Cloudflare","/deploy/providers/cloudflare","2.deploy/20.providers/cloudflare",{"title":141,"path":142,"stem":143},"Deno Deploy","/deploy/providers/deno-deploy","2.deploy/20.providers/deno-deploy",{"title":145,"path":146,"stem":147},"DigitalOcean","/deploy/providers/digitalocean","2.deploy/20.providers/digitalocean",{"title":149,"path":150,"stem":151},"Firebase","/deploy/providers/firebase","2.deploy/20.providers/firebase",{"title":153,"path":154,"stem":155},"Flightcontrol","/deploy/providers/flightcontrol","2.deploy/20.providers/flightcontrol",{"title":157,"path":158,"stem":159},"Genezio","/deploy/providers/genezio","2.deploy/20.providers/genezio",{"title":161,"path":162,"stem":163},"GitHub Pages","/deploy/providers/github-pages","2.deploy/20.providers/github-pages",{"title":165,"path":166,"stem":167},"GitLab Pages","/deploy/providers/gitlab-pages","2.deploy/20.providers/gitlab-pages",{"title":169,"path":170,"stem":171},"Heroku","/deploy/providers/heroku","2.deploy/20.providers/heroku",{"title":173,"path":174,"stem":175},"IIS","/deploy/providers/iis","2.deploy/20.providers/iis",{"title":177,"path":178,"stem":179},"Koyeb","/deploy/providers/koyeb","2.deploy/20.providers/koyeb",{"title":181,"path":182,"stem":183},"Netlify","/deploy/providers/netlify","2.deploy/20.providers/netlify",{"title":185,"path":186,"stem":187},"Platform.sh","/deploy/providers/platform-sh","2.deploy/20.providers/platform-sh",{"title":189,"path":190,"stem":191},"Render.com","/deploy/providers/render","2.deploy/20.providers/render",{"title":193,"path":194,"stem":195},"StormKit","/deploy/providers/stormkit","2.deploy/20.providers/stormkit",{"title":197,"path":198,"stem":199},"Vercel","/deploy/providers/vercel","2.deploy/20.providers/vercel",{"title":201,"path":202,"stem":203},"Zeabur","/deploy/providers/zeabur","2.deploy/20.providers/zeabur",{"title":205,"path":206,"stem":207},"Zerops","/deploy/providers/zerops","2.deploy/20.providers/zerops",{"title":33,"path":209,"stem":210,"children":211,"icon":36},"/config","3.config/0.index",[212],{"title":33,"path":209,"stem":210,"icon":36},{"title":5,"path":214,"stem":215},"/","index",{"id":217,"title":23,"body":218,"description":1868,"extension":1114,"meta":1869,"navigation":1870,"path":24,"seo":1871,"stem":25,"__hash__":1872},"content/1.docs/5.routing.md",{"type":219,"value":220,"toc":1853,"icon":26},"minimark",[221,245,253,262,265,322,340,344,352,359,433,436,440,463,550,557,567,570,582,668,671,681,754,759,768,771,782,979,982,985,997,1059,1062,1082,1091,1095,1098,1103,1110,1146,1149,1156,1206,1217,1226,1229,1236,1242,1365,1372,1375,1378,1408,1411,1439,1473,1476,1479,1482,1485,1559,1562,1570,1595,1605,1608,1611,1620,1635,1647,1658,1849],[222,223,224],"blockquote",{},[225,226,227,228,235,236,240,241,244],"p",{},"Nitro 支持基于文件的 API 路由（文件会自动映射到 ",[229,230,234],"a",{"href":231,"rel":232},"https://h3.zhcndoc.com/guide/basics/routing",[233],"nofollow","h3 路由","）。定义路由就像在 ",[237,238,239],"code",{},"server/api/"," 或 ",[237,242,243],{},"server/routes/"," 目录内创建一个文件一样简单。",[225,246,247,248,252],{},"每个文件只能定义一个处理程序，您可以 ",[229,249,251],{"href":250},"#specific-request-method","将 HTTP 方法附加"," 到文件名，以定义特定的请求方法。",[254,255,260],"pre",{"className":256,"code":258,"language":259},[257],"language-text","routes/\n  api/\n    test.ts      \u003C-- /api/test\n  hello.get.ts   \u003C-- /hello (GET only)\n  hello.post.ts  \u003C-- /hello (POST only)\nvite.config.ts\n","text",[237,261,258],{"__ignoreMap":5},[225,263,264],{},"您可以通过创建子目录来嵌套路由。",[254,266,270],{"className":267,"code":268,"language":269,"meta":5,"style":5},"language-txt shiki shiki-themes github-light github-dark github-dark","routes/\n  api/\n    [org]/\n      [repo]/\n        index.ts   \u003C-- /api/:org/:repo\n        issues.ts  \u003C-- /api/:org/:repo/issues\n      index.ts     \u003C-- /api/:org\npackage.json\n","txt",[237,271,272,280,286,292,298,304,310,316],{"__ignoreMap":5},[273,274,277],"span",{"class":275,"line":276},"line",1,[273,278,279],{},"routes/\n",[273,281,283],{"class":275,"line":282},2,[273,284,285],{},"  api/\n",[273,287,289],{"class":275,"line":288},3,[273,290,291],{},"    [org]/\n",[273,293,295],{"class":275,"line":294},4,[273,296,297],{},"      [repo]/\n",[273,299,301],{"class":275,"line":300},5,[273,302,303],{},"        index.ts   \u003C-- /api/:org/:repo\n",[273,305,307],{"class":275,"line":306},6,[273,308,309],{},"        issues.ts  \u003C-- /api/:org/:repo/issues\n",[273,311,313],{"class":275,"line":312},7,[273,314,315],{},"      index.ts     \u003C-- /api/:org\n",[273,317,319],{"class":275,"line":318},8,[273,320,321],{},"package.json\n",[323,324,325],"tip",{},[225,326,327,328,331,332,335,336,339],{},"有些提供商如 Vercel 将顶级 ",[237,329,330],{},"/api/"," 目录作为特性使用，因此放在 ",[237,333,334],{},"/api"," 中的路由将无法工作。\n您需要使用 ",[237,337,338],{},"server/routes/api/","。",[341,342,343],"h3",{"id":343},"简单路由",[225,345,346,347,240,349,351],{},"首先，在 ",[237,348,243],{},[237,350,239],{}," 目录中创建一个文件。文件名将是路由路径。",[225,353,354,355,358],{},"然后，导出一个用 ",[237,356,357],{},"defineEventHandler"," 包裹的函数，该函数将在路由匹配时执行。",[254,360,365],{"className":361,"code":362,"filename":363,"language":364,"meta":5,"style":5},"language-ts shiki shiki-themes github-light github-dark github-dark","import { defineHandler } from \"nitro/h3\";\n\nexport default defineHandler(() => {\n  return { hello: \"API\" };\n});\n","routes/api/test.ts","ts",[237,366,367,387,393,414,428],{"__ignoreMap":5},[273,368,369,373,377,380,384],{"class":275,"line":276},[273,370,372],{"class":371},"so5gQ","import",[273,374,376],{"class":375},"slsVL"," { defineHandler } ",[273,378,379],{"class":371},"from",[273,381,383],{"class":382},"sfrk1"," \"nitro/h3\"",[273,385,386],{"class":375},";\n",[273,388,389],{"class":275,"line":282},[273,390,392],{"emptyLinePlaceholder":391},true,"\n",[273,394,395,398,401,405,408,411],{"class":275,"line":288},[273,396,397],{"class":371},"export",[273,399,400],{"class":371}," default",[273,402,404],{"class":403},"shcOC"," defineHandler",[273,406,407],{"class":375},"(() ",[273,409,410],{"class":371},"=>",[273,412,413],{"class":375}," {\n",[273,415,416,419,422,425],{"class":275,"line":294},[273,417,418],{"class":371},"  return",[273,420,421],{"class":375}," { hello: ",[273,423,424],{"class":382},"\"API\"",[273,426,427],{"class":375}," };\n",[273,429,430],{"class":275,"line":300},[273,431,432],{"class":375},"});\n",[341,434,435],{"id":435},"带参数的路由",[437,438,439],"h4",{"id":439},"单个参数",[225,441,442,443,446,447,450,451,454,455,462],{},"要定义带参数的路由，请使用 ",[237,444,445],{},"[\u003Cparam>]"," 语法，其中 ",[237,448,449],{},"\u003Cparam>"," 是参数的名称。该参数将在 ",[237,452,453],{},"event.context.params"," 对象中可用，或使用 ",[229,456,459],{"href":457,"rel":458},"https://h3.dev/utils/request#getrouterparamevent-name-opts-decode",[233],[237,460,461],{},"getRouterParam"," 工具。",[254,464,467],{"className":361,"code":465,"filename":466,"language":364,"meta":5,"style":5},"import { defineHandler } from \"nitro/h3\";\n\nexport default defineHandler((event) => {\n  const { name } = event.context.params;\n\n  return `Hello ${name}!`;\n});\n","routes/hello/[name].ts",[237,468,469,481,485,507,528,532,546],{"__ignoreMap":5},[273,470,471,473,475,477,479],{"class":275,"line":276},[273,472,372],{"class":371},[273,474,376],{"class":375},[273,476,379],{"class":371},[273,478,383],{"class":382},[273,480,386],{"class":375},[273,482,483],{"class":275,"line":282},[273,484,392],{"emptyLinePlaceholder":391},[273,486,487,489,491,493,496,500,503,505],{"class":275,"line":288},[273,488,397],{"class":371},[273,490,400],{"class":371},[273,492,404],{"class":403},[273,494,495],{"class":375},"((",[273,497,499],{"class":498},"sQHwn","event",[273,501,502],{"class":375},") ",[273,504,410],{"class":371},[273,506,413],{"class":375},[273,508,509,512,515,519,522,525],{"class":275,"line":294},[273,510,511],{"class":371},"  const",[273,513,514],{"class":375}," { ",[273,516,518],{"class":517},"suiK_","name",[273,520,521],{"class":375}," } ",[273,523,524],{"class":371},"=",[273,526,527],{"class":375}," event.context.params;\n",[273,529,530],{"class":275,"line":300},[273,531,392],{"emptyLinePlaceholder":391},[273,533,534,536,539,541,544],{"class":275,"line":306},[273,535,418],{"class":371},[273,537,538],{"class":382}," `Hello ${",[273,540,518],{"class":375},[273,542,543],{"class":382},"}!`",[273,545,386],{"class":375},[273,547,548],{"class":275,"line":312},[273,549,432],{"class":375},[225,551,552,553,556],{},"调用带参数的路由 ",[237,554,555],{},"/hello/nitro","，您将得到：",[254,558,561],{"className":267,"code":559,"filename":560,"language":269,"meta":5,"style":5},"Hello nitro!\n","Response",[237,562,563],{"__ignoreMap":5},[273,564,565],{"class":275,"line":276},[273,566,559],{},[437,568,569],{"id":569},"多个参数",[225,571,572,573,576,577,581],{},"您可以通过使用 ",[237,574,575],{},"[\u003Cparam1>]/[\u003Cparam2>]"," 语法在路由中定义多个参数，其中每个参数都是一个文件夹。您 ",[578,579,580],"strong",{},"不能"," 在单个文件名的文件夹中定义多个参数。",[254,583,586],{"className":361,"code":584,"filename":585,"language":364,"meta":5,"style":5},"import { defineHandler } from \"nitro/h3\";\n\nexport default defineHandler((event) => {\n  const { name, age } = event.context.params;\n\n  return `Hello ${name}! You are ${age} years old.`;\n});\n","routes/hello/[name]/[age].ts",[237,587,588,600,604,622,642,646,664],{"__ignoreMap":5},[273,589,590,592,594,596,598],{"class":275,"line":276},[273,591,372],{"class":371},[273,593,376],{"class":375},[273,595,379],{"class":371},[273,597,383],{"class":382},[273,599,386],{"class":375},[273,601,602],{"class":275,"line":282},[273,603,392],{"emptyLinePlaceholder":391},[273,605,606,608,610,612,614,616,618,620],{"class":275,"line":288},[273,607,397],{"class":371},[273,609,400],{"class":371},[273,611,404],{"class":403},[273,613,495],{"class":375},[273,615,499],{"class":498},[273,617,502],{"class":375},[273,619,410],{"class":371},[273,621,413],{"class":375},[273,623,624,626,628,630,633,636,638,640],{"class":275,"line":294},[273,625,511],{"class":371},[273,627,514],{"class":375},[273,629,518],{"class":517},[273,631,632],{"class":375},", ",[273,634,635],{"class":517},"age",[273,637,521],{"class":375},[273,639,524],{"class":371},[273,641,527],{"class":375},[273,643,644],{"class":275,"line":300},[273,645,392],{"emptyLinePlaceholder":391},[273,647,648,650,652,654,657,659,662],{"class":275,"line":306},[273,649,418],{"class":371},[273,651,538],{"class":382},[273,653,518],{"class":375},[273,655,656],{"class":382},"}! You are ${",[273,658,635],{"class":375},[273,660,661],{"class":382},"} years old.`",[273,663,386],{"class":375},[273,665,666],{"class":275,"line":312},[273,667,432],{"class":375},[437,669,670],{"id":670},"捕获所有参数",[225,672,673,674,677,678,680],{},"您可以使用 ",[237,675,676],{},"[...\u003Cparam>]"," 语法捕获 URL 中剩余的所有部分。这将包括斜杠 ",[237,679,214],{}," 在参数中。",[254,682,684],{"className":361,"code":465,"filename":683,"language":364,"meta":5,"style":5},"routes/hello/[...name].ts",[237,685,686,698,702,720,734,738,750],{"__ignoreMap":5},[273,687,688,690,692,694,696],{"class":275,"line":276},[273,689,372],{"class":371},[273,691,376],{"class":375},[273,693,379],{"class":371},[273,695,383],{"class":382},[273,697,386],{"class":375},[273,699,700],{"class":275,"line":282},[273,701,392],{"emptyLinePlaceholder":391},[273,703,704,706,708,710,712,714,716,718],{"class":275,"line":288},[273,705,397],{"class":371},[273,707,400],{"class":371},[273,709,404],{"class":403},[273,711,495],{"class":375},[273,713,499],{"class":498},[273,715,502],{"class":375},[273,717,410],{"class":371},[273,719,413],{"class":375},[273,721,722,724,726,728,730,732],{"class":275,"line":294},[273,723,511],{"class":371},[273,725,514],{"class":375},[273,727,518],{"class":517},[273,729,521],{"class":375},[273,731,524],{"class":371},[273,733,527],{"class":375},[273,735,736],{"class":275,"line":300},[273,737,392],{"emptyLinePlaceholder":391},[273,739,740,742,744,746,748],{"class":275,"line":306},[273,741,418],{"class":371},[273,743,538],{"class":382},[273,745,518],{"class":375},[273,747,543],{"class":382},[273,749,386],{"class":375},[273,751,752],{"class":275,"line":312},[273,753,432],{"class":375},[225,755,552,756,556],{},[237,757,758],{},"/hello/nitro/is/hot",[254,760,762],{"className":267,"code":761,"filename":560,"language":269,"meta":5,"style":5},"Hello nitro/is/hot!\n",[237,763,764],{"__ignoreMap":5},[273,765,766],{"class":275,"line":276},[273,767,761],{},[341,769,770],{"id":770},"特定请求方法",[225,772,773,774,777,778,781],{},"您可以将 HTTP 方法附加到文件名，以强制路由仅匹配特定的 HTTP 请求方法，例如 ",[237,775,776],{},"hello.get.ts"," 将仅匹配 ",[237,779,780],{},"GET"," 请求。您可以使用任何您想要的 HTTP 方法。",[783,784,785,881],"code-group",{},[254,786,790],{"className":787,"code":788,"filename":780,"language":789,"meta":5,"style":5},"language-js shiki shiki-themes github-light github-dark github-dark","// routes/users/[id].get.ts\nimport { defineHandler } from \"nitro/h3\";\n\nexport default defineHandler(async (event) => {\n  const { id } = event.context.params;\n\n  // 对 id 执行某些操作\n\n  return `用户资料！`\n})\n","js",[237,791,792,798,810,814,839,854,858,863,867,875],{"__ignoreMap":5},[273,793,794],{"class":275,"line":276},[273,795,797],{"class":796},"sCsY4","// routes/users/[id].get.ts\n",[273,799,800,802,804,806,808],{"class":275,"line":282},[273,801,372],{"class":371},[273,803,376],{"class":375},[273,805,379],{"class":371},[273,807,383],{"class":382},[273,809,386],{"class":375},[273,811,812],{"class":275,"line":288},[273,813,392],{"emptyLinePlaceholder":391},[273,815,816,818,820,822,825,828,831,833,835,837],{"class":275,"line":294},[273,817,397],{"class":371},[273,819,400],{"class":371},[273,821,404],{"class":403},[273,823,824],{"class":375},"(",[273,826,827],{"class":371},"async",[273,829,830],{"class":375}," (",[273,832,499],{"class":498},[273,834,502],{"class":375},[273,836,410],{"class":371},[273,838,413],{"class":375},[273,840,841,843,845,848,850,852],{"class":275,"line":300},[273,842,511],{"class":371},[273,844,514],{"class":375},[273,846,847],{"class":517},"id",[273,849,521],{"class":375},[273,851,524],{"class":371},[273,853,527],{"class":375},[273,855,856],{"class":275,"line":306},[273,857,392],{"emptyLinePlaceholder":391},[273,859,860],{"class":275,"line":312},[273,861,862],{"class":796},"  // 对 id 执行某些操作\n",[273,864,865],{"class":275,"line":318},[273,866,392],{"emptyLinePlaceholder":391},[273,868,870,872],{"class":275,"line":869},9,[273,871,418],{"class":371},[273,873,874],{"class":382}," `用户资料！`\n",[273,876,878],{"class":275,"line":877},10,[273,879,880],{"class":375},"})\n",[254,882,885],{"className":787,"code":883,"filename":884,"language":789,"meta":5,"style":5},"// routes/users.post.ts\nimport { defineHandler, readBody } from \"nitro/h3\";\n\nexport default defineHandler(async (event) => {\n  const body = await readBody(event);\n\n  // 对 body 执行某些操作，例如将其保存到数据库\n\n  return { updated: true };\n});\n","POST",[237,886,887,892,905,909,931,950,954,959,963,975],{"__ignoreMap":5},[273,888,889],{"class":275,"line":276},[273,890,891],{"class":796},"// routes/users.post.ts\n",[273,893,894,896,899,901,903],{"class":275,"line":282},[273,895,372],{"class":371},[273,897,898],{"class":375}," { defineHandler, readBody } ",[273,900,379],{"class":371},[273,902,383],{"class":382},[273,904,386],{"class":375},[273,906,907],{"class":275,"line":288},[273,908,392],{"emptyLinePlaceholder":391},[273,910,911,913,915,917,919,921,923,925,927,929],{"class":275,"line":294},[273,912,397],{"class":371},[273,914,400],{"class":371},[273,916,404],{"class":403},[273,918,824],{"class":375},[273,920,827],{"class":371},[273,922,830],{"class":375},[273,924,499],{"class":498},[273,926,502],{"class":375},[273,928,410],{"class":371},[273,930,413],{"class":375},[273,932,933,935,938,941,944,947],{"class":275,"line":300},[273,934,511],{"class":371},[273,936,937],{"class":517}," body",[273,939,940],{"class":371}," =",[273,942,943],{"class":371}," await",[273,945,946],{"class":403}," readBody",[273,948,949],{"class":375},"(event);\n",[273,951,952],{"class":275,"line":306},[273,953,392],{"emptyLinePlaceholder":391},[273,955,956],{"class":275,"line":312},[273,957,958],{"class":796},"  // 对 body 执行某些操作，例如将其保存到数据库\n",[273,960,961],{"class":275,"line":318},[273,962,392],{"emptyLinePlaceholder":391},[273,964,965,967,970,973],{"class":275,"line":869},[273,966,418],{"class":371},[273,968,969],{"class":375}," { updated: ",[273,971,972],{"class":517},"true",[273,974,427],{"class":375},[273,976,977],{"class":275,"line":877},[273,978,432],{"class":375},[341,980,981],{"id":981},"捕获所有路由",[225,983,984],{},"您可以创建一个特殊的路由，匹配未被任何其他路由匹配的所有路由。这对于创建默认路由非常有用。",[225,986,987,988,240,990,992,993,996],{},"要创建捕获所有路由，请在 ",[237,989,243],{},[237,991,239],{}," 目录或任何子目录中创建一个名为 ",[237,994,995],{},"[...].ts"," 的文件。",[254,998,1001],{"className":361,"code":999,"filename":1000,"language":364,"meta":5,"style":5},"import { defineHandler } from \"nitro/h3\";\n\nexport default defineHandler((event) => {\n  return `Hello ${event.url}!`;\n});\n","routes/[...].ts",[237,1002,1003,1015,1019,1037,1055],{"__ignoreMap":5},[273,1004,1005,1007,1009,1011,1013],{"class":275,"line":276},[273,1006,372],{"class":371},[273,1008,376],{"class":375},[273,1010,379],{"class":371},[273,1012,383],{"class":382},[273,1014,386],{"class":375},[273,1016,1017],{"class":275,"line":282},[273,1018,392],{"emptyLinePlaceholder":391},[273,1020,1021,1023,1025,1027,1029,1031,1033,1035],{"class":275,"line":288},[273,1022,397],{"class":371},[273,1024,400],{"class":371},[273,1026,404],{"class":403},[273,1028,495],{"class":375},[273,1030,499],{"class":498},[273,1032,502],{"class":375},[273,1034,410],{"class":371},[273,1036,413],{"class":375},[273,1038,1039,1041,1043,1045,1048,1051,1053],{"class":275,"line":294},[273,1040,418],{"class":371},[273,1042,538],{"class":382},[273,1044,499],{"class":375},[273,1046,1047],{"class":382},".",[273,1049,1050],{"class":375},"url",[273,1052,543],{"class":382},[273,1054,386],{"class":375},[273,1056,1057],{"class":275,"line":300},[273,1058,432],{"class":375},[341,1060,1061],{"id":1061},"环境特定处理程序",[225,1063,1064,1065,1068,1069,240,1072,1075,1076,240,1079,339],{},"您可以指定仅在特定构建中包含的路由，通过在文件名后添加 ",[237,1066,1067],{},".dev","、",[237,1070,1071],{},".prod",[237,1073,1074],{},".prerender"," 后缀，例如：",[237,1077,1078],{},"routes/test.get.dev.ts",[237,1080,1081],{},"routes/test.get.prod.ts",[323,1083,1084],{},[225,1085,1086,1087,1090],{},"\n您可以通过 ",[237,1088,1089],{},"handlers[]"," 配置的程序注册为环境指定多个环境或预设名称作为环境。",[1092,1093,1094],"h2",{"id":1094},"中间件",[225,1096,1097],{},"Nitro 路由中间件可以挂钩到请求生命周期中。",[323,1099,1100],{},[225,1101,1102],{},"中间件可以在请求处理前修改请求，而不是之后。",[225,1104,1105,1106,1109],{},"中间件在 ",[237,1107,1108],{},"server/middleware/"," 目录中自动注册。",[254,1111,1115],{"className":1112,"code":1113,"language":1114,"meta":5,"style":5},"language-md shiki shiki-themes github-light github-dark github-dark","middleware/\n  auth.ts\n  logger.ts\n  ...\nroutes/\n  hello.ts\n","md",[237,1116,1117,1122,1127,1132,1137,1141],{"__ignoreMap":5},[273,1118,1119],{"class":275,"line":276},[273,1120,1121],{"class":375},"middleware/\n",[273,1123,1124],{"class":275,"line":282},[273,1125,1126],{"class":375},"  auth.ts\n",[273,1128,1129],{"class":275,"line":288},[273,1130,1131],{"class":375},"  logger.ts\n",[273,1133,1134],{"class":275,"line":294},[273,1135,1136],{"class":375},"  ...\n",[273,1138,1139],{"class":275,"line":300},[273,1140,279],{"class":375},[273,1142,1143],{"class":275,"line":306},[273,1144,1145],{"class":375},"  hello.ts\n",[341,1147,1148],{"id":1148},"简单中间件",[225,1150,1151,1152,1155],{},"中间件与路由处理程序的定义方式完全相同，唯一例外是它们不应返回任何内容。",[1153,1154],"br",{},"\n从中间件返回的行为类似于从请求返回 - 该值将作为响应返回，且不会执行后续代码。",[254,1157,1160],{"className":361,"code":1158,"filename":1159,"language":364,"meta":5,"style":5},"export default defineEventHandler((event) => {\n  // 扩展或修改事件\n  event.context.user = { name: 'Nitro' }\n})\n","server/middleware/auth.ts",[237,1161,1162,1181,1186,1202],{"__ignoreMap":5},[273,1163,1164,1166,1168,1171,1173,1175,1177,1179],{"class":275,"line":276},[273,1165,397],{"class":371},[273,1167,400],{"class":371},[273,1169,1170],{"class":403}," defineEventHandler",[273,1172,495],{"class":375},[273,1174,499],{"class":498},[273,1176,502],{"class":375},[273,1178,410],{"class":371},[273,1180,413],{"class":375},[273,1182,1183],{"class":275,"line":282},[273,1184,1185],{"class":796},"  // 扩展或修改事件\n",[273,1187,1188,1191,1193,1196,1199],{"class":275,"line":288},[273,1189,1190],{"class":375},"  event.context.user ",[273,1192,524],{"class":371},[273,1194,1195],{"class":375}," { name: ",[273,1197,1198],{"class":382},"'Nitro'",[273,1200,1201],{"class":375}," }\n",[273,1203,1204],{"class":275,"line":294},[273,1205,880],{"class":375},[225,1207,1208,1209,1211,1212,339],{},"在 ",[237,1210,1108],{}," 目录中的中间件会自动注册到所有路由。如果您想为特定路由注册中间件，请参见 ",[229,1213,1216],{"href":1214,"rel":1215},"https://h3.zhcndoc.com/guide/basics/handler#object-syntax",[233],"对象语法事件处理程序",[1218,1219,1220],"note",{},[225,1221,1222,1223],{},"从中间件返回任何内容将关闭请求，应避免！从中间件返回的任何值将是响应，且后续代码将不被执行，然而 ",[578,1224,1225],{},"这并不推荐这样做！",[341,1227,1228],{"id":1228},"路由元数据",[225,1230,1231,1232,1235],{},"您可以在构建时使用 ",[237,1233,1234],{},"defineRouteMeta"," 宏在事件处理程序文件中定义路由处理程序的元数据。",[1237,1238,1239],"important",{},[225,1240,1241],{},"\n🚧 此功能当前处于实验阶段。",[254,1243,1245],{"className":361,"code":1244,"filename":363,"language":364,"meta":5,"style":5},"import { defineRouteMeta } from \"nitro/runtime\";\nimport { defineHandler } from \"nitro/h3\";\n\ndefineRouteMeta({\n  openAPI: {\n    tags: [\"test\"],\n    description: \"测试路由描述\",\n    parameters: [{ in: \"query\", name: \"test\", required: true }],\n  },\n});\n\nexport default defineHandler(() => \"OK\");\n",[237,1246,1247,1261,1273,1277,1284,1289,1300,1311,1332,1337,1341,1346],{"__ignoreMap":5},[273,1248,1249,1251,1254,1256,1259],{"class":275,"line":276},[273,1250,372],{"class":371},[273,1252,1253],{"class":375}," { defineRouteMeta } ",[273,1255,379],{"class":371},[273,1257,1258],{"class":382}," \"nitro/runtime\"",[273,1260,386],{"class":375},[273,1262,1263,1265,1267,1269,1271],{"class":275,"line":282},[273,1264,372],{"class":371},[273,1266,376],{"class":375},[273,1268,379],{"class":371},[273,1270,383],{"class":382},[273,1272,386],{"class":375},[273,1274,1275],{"class":275,"line":288},[273,1276,392],{"emptyLinePlaceholder":391},[273,1278,1279,1281],{"class":275,"line":294},[273,1280,1234],{"class":403},[273,1282,1283],{"class":375},"({\n",[273,1285,1286],{"class":275,"line":300},[273,1287,1288],{"class":375},"  openAPI: {\n",[273,1290,1291,1294,1297],{"class":275,"line":306},[273,1292,1293],{"class":375},"    tags: [",[273,1295,1296],{"class":382},"\"test\"",[273,1298,1299],{"class":375},"],\n",[273,1301,1302,1305,1308],{"class":275,"line":312},[273,1303,1304],{"class":375},"    description: ",[273,1306,1307],{"class":382},"\"测试路由描述\"",[273,1309,1310],{"class":375},",\n",[273,1312,1313,1316,1319,1322,1324,1327,1329],{"class":275,"line":318},[273,1314,1315],{"class":375},"    parameters: [{ in: ",[273,1317,1318],{"class":382},"\"query\"",[273,1320,1321],{"class":375},", name: ",[273,1323,1296],{"class":382},[273,1325,1326],{"class":375},", required: ",[273,1328,972],{"class":517},[273,1330,1331],{"class":375}," }],\n",[273,1333,1334],{"class":275,"line":869},[273,1335,1336],{"class":375},"  },\n",[273,1338,1339],{"class":275,"line":877},[273,1340,432],{"class":375},[273,1342,1344],{"class":275,"line":1343},11,[273,1345,392],{"emptyLinePlaceholder":391},[273,1347,1349,1351,1353,1355,1357,1359,1362],{"class":275,"line":1348},12,[273,1350,397],{"class":371},[273,1352,400],{"class":371},[273,1354,404],{"class":403},[273,1356,407],{"class":375},[273,1358,410],{"class":371},[273,1360,1361],{"class":382}," \"OK\"",[273,1363,1364],{"class":375},");\n",[1366,1367,1369],"read-more",{"to":1368},"https://swagger.io/specification/v3/",[225,1370,1371],{},"此功能目前可用于指定 OpenAPI 元数据。有关可用的 OpenAPI 选项，请参见 swagger 规范。",[341,1373,1374],{"id":1374},"执行顺序",[225,1376,1377],{},"中间件按目录列表顺序执行。",[254,1379,1381],{"className":1112,"code":1380,"language":1114,"meta":5,"style":5},"server/\n  middleware/\n    auth.ts \u003C-- 第一个\n    logger.ts \u003C-- 第二个\n    ... \u003C-- 第三个\n",[237,1382,1383,1388,1393,1398,1403],{"__ignoreMap":5},[273,1384,1385],{"class":275,"line":276},[273,1386,1387],{"class":375},"server/\n",[273,1389,1390],{"class":275,"line":282},[273,1391,1392],{"class":375},"  middleware/\n",[273,1394,1395],{"class":275,"line":288},[273,1396,1397],{"class":375},"    auth.ts \u003C-- 第一个\n",[273,1399,1400],{"class":275,"line":294},[273,1401,1402],{"class":375},"    logger.ts \u003C-- 第二个\n",[273,1404,1405],{"class":275,"line":300},[273,1406,1407],{"class":375},"    ... \u003C-- 第三个\n",[225,1409,1410],{},"用数字前缀中间件以控制其执行顺序。",[254,1412,1414],{"className":1112,"code":1413,"language":1114,"meta":5,"style":5},"server/\n  middleware/\n    1.logger.ts \u003C-- 第一个\n    2.auth.ts \u003C-- 第二个\n    3.... \u003C-- 第三个\n",[237,1415,1416,1420,1424,1429,1434],{"__ignoreMap":5},[273,1417,1418],{"class":275,"line":276},[273,1419,1387],{"class":375},[273,1421,1422],{"class":275,"line":282},[273,1423,1392],{"class":375},[273,1425,1426],{"class":275,"line":288},[273,1427,1428],{"class":375},"    1.logger.ts \u003C-- 第一个\n",[273,1430,1431],{"class":275,"line":294},[273,1432,1433],{"class":375},"    2.auth.ts \u003C-- 第二个\n",[273,1435,1436],{"class":275,"line":300},[273,1437,1438],{"class":375},"    3.... \u003C-- 第三个\n",[1218,1440,1441],{},[225,1442,1443,1444,1068,1447,1450,1451,1454,1455,1457,1458,1460,1461,1464,1465,1468,1469,1472],{},"请记住，文件名按字符串排序，因此例如如果您有 3 个文件 ",[237,1445,1446],{},"1.filename.ts",[237,1448,1449],{},"2.filename.ts"," 和 ",[237,1452,1453],{},"10.filename.ts","，则 ",[237,1456,1453],{}," 将在 ",[237,1459,1446],{}," 之后出现。为避免这种情况，前缀 ",[237,1462,1463],{},"1-9"," 时使用 ",[237,1466,1467],{},"0","，如 ",[237,1470,1471],{},"01","，如果您在同一目录中有超过 10 个中间件。",[341,1474,1475],{"id":1475},"请求过滤",[225,1477,1478],{},"中间件在每个请求上执行。",[225,1480,1481],{},"应用自定义逻辑，将其作用域限制为特定条件。",[225,1483,1484],{},"例如，您可以使用 URL 将中间件应用于特定路由：",[254,1486,1488],{"className":361,"code":1487,"filename":1159,"language":364,"meta":5,"style":5},"export default defineEventHandler((event) => {\n  // 仅在 /auth 路由执行\n  if (getRequestURL(event).pathname.startsWith('/auth')) {\n    event.context.user = { name: 'Nitro' }\n  }\n});\n",[237,1489,1490,1508,1513,1537,1550,1555],{"__ignoreMap":5},[273,1491,1492,1494,1496,1498,1500,1502,1504,1506],{"class":275,"line":276},[273,1493,397],{"class":371},[273,1495,400],{"class":371},[273,1497,1170],{"class":403},[273,1499,495],{"class":375},[273,1501,499],{"class":498},[273,1503,502],{"class":375},[273,1505,410],{"class":371},[273,1507,413],{"class":375},[273,1509,1510],{"class":275,"line":282},[273,1511,1512],{"class":796},"  // 仅在 /auth 路由执行\n",[273,1514,1515,1518,1520,1523,1526,1529,1531,1534],{"class":275,"line":288},[273,1516,1517],{"class":371},"  if",[273,1519,830],{"class":375},[273,1521,1522],{"class":403},"getRequestURL",[273,1524,1525],{"class":375},"(event).pathname.",[273,1527,1528],{"class":403},"startsWith",[273,1530,824],{"class":375},[273,1532,1533],{"class":382},"'/auth'",[273,1535,1536],{"class":375},")) {\n",[273,1538,1539,1542,1544,1546,1548],{"class":275,"line":294},[273,1540,1541],{"class":375},"    event.context.user ",[273,1543,524],{"class":371},[273,1545,1195],{"class":375},[273,1547,1198],{"class":382},[273,1549,1201],{"class":375},[273,1551,1552],{"class":275,"line":300},[273,1553,1554],{"class":375},"  }\n",[273,1556,1557],{"class":275,"line":306},[273,1558,432],{"class":375},[1092,1560,1561],{"id":1561},"错误处理",[225,1563,673,1564,1569],{},[229,1565,1568],{"href":1566,"rel":1567},"https://h3.zhcndoc.com/guide/basics/error",[233],"H3 中提供的工具"," 来处理路由和中间件中的错误。",[225,1571,1572,1573,1576,1577,1580,1581,1583,1584,240,1587,1590,1591,1594],{},"错误返回给客户端的方式取决于路由的路径。对于大多数路由，",[237,1574,1575],{},"Content-Type"," 默认设置为 ",[237,1578,1579],{},"text/html","，并交付简单的 HTML 错误页面。如果路由以 ",[237,1582,330],{}," 开头（因为它位于 ",[237,1585,1586],{},"api/",[237,1588,1589],{},"routes/api/"," 中），默认将更改为 ",[237,1592,1593],{},"application/json","，并发送 JSON 对象。",[225,1596,1597,1598,240,1601,1604],{},"这种行为可以被某些请求属性（例如：",[237,1599,1600],{},"Accept",[237,1602,1603],{},"User-Agent"," 头）覆盖。",[1092,1606,1607],{"id":1607},"路由规则",[225,1609,1610],{},"Nitro 允许您在配置的顶层为每个路由添加逻辑。这可以用于重定向、代理、缓存和为路由添加头。",[225,1612,1613,1614,1619],{},"它是从路由模式（遵循 ",[229,1615,1618],{"href":1616,"rel":1617},"https://github.com/h3js/rou3",[233],"rou3","）到路由选项的映射。",[225,1621,1622,1623,1626,1627,1630,1631,339],{},"当 ",[237,1624,1625],{},"cache"," 选项设置时，匹配模式的处理程序将自动包裹在 ",[237,1628,1629],{},"defineCachedEventHandler"," 中。有关此功能的更多信息，请参见 ",[229,1632,1634],{"href":1633},"/guide/cache","缓存指南",[1218,1636,1637],{},[225,1638,1639,1642,1643,1646],{},[237,1640,1641],{},"swr: true|number"," 是 ",[237,1644,1645],{},"cache: { swr: true, maxAge: number }"," 的快捷方式。",[225,1648,1649,1650,1653,1654,1657],{},"您可以在 ",[237,1651,1652],{},"nitro.config.ts"," 中使用 ",[237,1655,1656],{},"routeRules"," 选项设置路由规则。",[254,1659,1661],{"className":361,"code":1660,"filename":1652,"language":364,"meta":5,"style":5},"import { defineNitroConfig } from \"nitro/config\";\n\nexport default defineConfig({\n  routeRules: {\n    '/blog/**': { swr: true },\n    '/blog/**': { swr: 600 },\n    '/blog/**': { static: true },\n    '/blog/**': { cache: { /* 缓存选项 */ } },\n    '/assets/**': { headers: { 'cache-control': 's-maxage=0' } },\n    '/api/v1/**': { cors: true, headers: { 'access-control-allow-methods': 'GET' } },\n    '/old-page': { redirect: '/new-page' },\n    '/old-page/**': { redirect: '/new-page/**' },\n    '/proxy/example': { proxy: 'https://example.com' },\n    '/proxy/**': { proxy: '/api/**' },\n  }\n});\n",[237,1662,1663,1677,1681,1692,1697,1710,1721,1732,1745,1764,1787,1800,1812,1826,1839,1844],{"__ignoreMap":5},[273,1664,1665,1667,1670,1672,1675],{"class":275,"line":276},[273,1666,372],{"class":371},[273,1668,1669],{"class":375}," { defineNitroConfig } ",[273,1671,379],{"class":371},[273,1673,1674],{"class":382}," \"nitro/config\"",[273,1676,386],{"class":375},[273,1678,1679],{"class":275,"line":282},[273,1680,392],{"emptyLinePlaceholder":391},[273,1682,1683,1685,1687,1690],{"class":275,"line":288},[273,1684,397],{"class":371},[273,1686,400],{"class":371},[273,1688,1689],{"class":403}," defineConfig",[273,1691,1283],{"class":375},[273,1693,1694],{"class":275,"line":294},[273,1695,1696],{"class":375},"  routeRules: {\n",[273,1698,1699,1702,1705,1707],{"class":275,"line":300},[273,1700,1701],{"class":382},"    '/blog/**'",[273,1703,1704],{"class":375},": { swr: ",[273,1706,972],{"class":517},[273,1708,1709],{"class":375}," },\n",[273,1711,1712,1714,1716,1719],{"class":275,"line":306},[273,1713,1701],{"class":382},[273,1715,1704],{"class":375},[273,1717,1718],{"class":517},"600",[273,1720,1709],{"class":375},[273,1722,1723,1725,1728,1730],{"class":275,"line":312},[273,1724,1701],{"class":382},[273,1726,1727],{"class":375},": { static: ",[273,1729,972],{"class":517},[273,1731,1709],{"class":375},[273,1733,1734,1736,1739,1742],{"class":275,"line":318},[273,1735,1701],{"class":382},[273,1737,1738],{"class":375},": { cache: { ",[273,1740,1741],{"class":796},"/* 缓存选项 */",[273,1743,1744],{"class":375}," } },\n",[273,1746,1747,1750,1753,1756,1759,1762],{"class":275,"line":869},[273,1748,1749],{"class":382},"    '/assets/**'",[273,1751,1752],{"class":375},": { headers: { ",[273,1754,1755],{"class":382},"'cache-control'",[273,1757,1758],{"class":375},": ",[273,1760,1761],{"class":382},"'s-maxage=0'",[273,1763,1744],{"class":375},[273,1765,1766,1769,1772,1774,1777,1780,1782,1785],{"class":275,"line":877},[273,1767,1768],{"class":382},"    '/api/v1/**'",[273,1770,1771],{"class":375},": { cors: ",[273,1773,972],{"class":517},[273,1775,1776],{"class":375},", headers: { ",[273,1778,1779],{"class":382},"'access-control-allow-methods'",[273,1781,1758],{"class":375},[273,1783,1784],{"class":382},"'GET'",[273,1786,1744],{"class":375},[273,1788,1789,1792,1795,1798],{"class":275,"line":1343},[273,1790,1791],{"class":382},"    '/old-page'",[273,1793,1794],{"class":375},": { redirect: ",[273,1796,1797],{"class":382},"'/new-page'",[273,1799,1709],{"class":375},[273,1801,1802,1805,1807,1810],{"class":275,"line":1348},[273,1803,1804],{"class":382},"    '/old-page/**'",[273,1806,1794],{"class":375},[273,1808,1809],{"class":382},"'/new-page/**'",[273,1811,1709],{"class":375},[273,1813,1815,1818,1821,1824],{"class":275,"line":1814},13,[273,1816,1817],{"class":382},"    '/proxy/example'",[273,1819,1820],{"class":375},": { proxy: ",[273,1822,1823],{"class":382},"'https://example.com'",[273,1825,1709],{"class":375},[273,1827,1829,1832,1834,1837],{"class":275,"line":1828},14,[273,1830,1831],{"class":382},"    '/proxy/**'",[273,1833,1820],{"class":375},[273,1835,1836],{"class":382},"'/api/**'",[273,1838,1709],{"class":375},[273,1840,1842],{"class":275,"line":1841},15,[273,1843,1554],{"class":375},[273,1845,1847],{"class":275,"line":1846},16,[273,1848,432],{"class":375},[1850,1851,1852],"style",{},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html pre.shiki code .so5gQ, html code.shiki .so5gQ{--shiki-light:#D73A49;--shiki-default:#F97583;--shiki-dark:#F97583}html pre.shiki code .slsVL, html code.shiki .slsVL{--shiki-light:#24292E;--shiki-default:#E1E4E8;--shiki-dark:#E1E4E8}html pre.shiki code .sfrk1, html code.shiki .sfrk1{--shiki-light:#032F62;--shiki-default:#9ECBFF;--shiki-dark:#9ECBFF}html pre.shiki code .shcOC, html code.shiki .shcOC{--shiki-light:#6F42C1;--shiki-default:#B392F0;--shiki-dark:#B392F0}html pre.shiki code .sQHwn, html code.shiki .sQHwn{--shiki-light:#E36209;--shiki-default:#FFAB70;--shiki-dark:#FFAB70}html pre.shiki code .suiK_, html code.shiki .suiK_{--shiki-light:#005CC5;--shiki-default:#79B8FF;--shiki-dark:#79B8FF}html pre.shiki code .sCsY4, html code.shiki .sCsY4{--shiki-light:#6A737D;--shiki-default:#6A737D;--shiki-dark:#6A737D}",{"title":5,"searchDepth":282,"depth":282,"links":1854},[1855,1856,1857,1858,1859,1860,1866,1867],{"id":343,"depth":288,"text":343},{"id":435,"depth":288,"text":435},{"id":770,"depth":288,"text":770},{"id":981,"depth":288,"text":981},{"id":1061,"depth":288,"text":1061},{"id":1094,"depth":282,"text":1094,"children":1861},[1862,1863,1864,1865],{"id":1148,"depth":288,"text":1148},{"id":1228,"depth":288,"text":1228},{"id":1374,"depth":288,"text":1374},{"id":1475,"depth":288,"text":1475},{"id":1561,"depth":282,"text":1561},{"id":1607,"depth":282,"text":1607},"Nitro 支持文件系统路由，自动将文件映射到 h3 路由。",{"icon":26},{"icon":26},{"title":23,"description":1868},"GPj2NJfMqeJ3hcV8x_hY0eRoYkWAJ4fHQQxkX9Kdrb4",[1874,1876],{"title":18,"path":19,"stem":20,"description":1875,"icon":21,"children":-1},"使用渲染器处理所有未匹配的路由，返回自定义 HTML 或使用模板系统。",{"title":28,"path":29,"stem":30,"description":5,"icon":31,"children":-1},1761554644069]