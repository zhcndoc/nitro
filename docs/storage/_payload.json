[{"data":1,"prerenderedAt":1214},["ShallowReactive",2],{"navigation":3,"-docs-storage":216,"-docs-storage-surround":1210},[4,83,208,213],{"title":5,"path":6,"stem":7,"children":8,"icon":82},"","/docs","1.docs/1.index",[9,12,17,22,27,32,37,42,47,52,57,62,67,72,77],{"title":10,"path":6,"stem":7,"icon":11},"介绍","i-lucide-compass",{"title":13,"path":14,"stem":15,"icon":16},"快速开始","/docs/quick-start","1.docs/2.quick-start","i-lucide-zap",{"title":18,"path":19,"stem":20,"icon":21},"渲染器","/docs/renderer","1.docs/4.renderer","ri:layout-masonry-line",{"title":23,"path":24,"stem":25,"icon":26},"服务器路由","/docs/routing","1.docs/5.routing","ri:direction-line",{"title":28,"path":29,"stem":30,"icon":31},"资源","/docs/assets","1.docs/50.assets","ri:image-2-line",{"title":33,"path":34,"stem":35,"icon":36},"配置","/docs/configuration","1.docs/50.configuration","ri:settings-3-line",{"title":38,"path":39,"stem":40,"icon":41},"数据库","/docs/database","1.docs/50.database","ri:database-2-line",{"title":43,"path":44,"stem":45,"icon":46},"生命周期","/docs/lifecycle","1.docs/50.lifecycle","i-lucide-layers",{"title":48,"path":49,"stem":50,"icon":51},"插件","/docs/plugins","1.docs/50.plugins","ri:plug-line",{"title":53,"path":54,"stem":55,"icon":56},"任务","/docs/tasks","1.docs/50.tasks","codicon:run-all",{"title":58,"path":59,"stem":60,"icon":61},"服务器入口","/docs/server-entry","1.docs/6.server-entry","ri:server-line",{"title":63,"path":64,"stem":65,"icon":66},"缓存","/docs/cache","1.docs/7.cache","ri:speed-line",{"title":68,"path":69,"stem":70,"icon":71},"KV 存储","/docs/storage","1.docs/8.storage","carbon:datastore",{"title":73,"path":74,"stem":75,"icon":76},"迁移指南","/docs/migration","1.docs/99.migration","ri:arrow-right-up-line",{"title":78,"path":79,"stem":80,"icon":81},"夜间通道","/docs/nightly","1.docs/99.nightly","ri:moon-fill","i-lucide-book-open",{"title":84,"path":85,"stem":86,"children":87,"icon":89},"概述","/deploy","2.deploy/0.index",[88,90,111],{"title":84,"path":85,"stem":86,"icon":89},"ri:upload-cloud-2-line",{"title":91,"path":92,"stem":93,"children":94,"page":110},"Runtimes","/deploy/runtimes","2.deploy/10.runtimes",[95,100,105],{"title":96,"path":97,"stem":98,"icon":99},"Node.js","/deploy/runtimes/node","2.deploy/10.runtimes/1.node","akar-icons:node-fill",{"title":101,"path":102,"stem":103,"icon":104},"Bun","/deploy/runtimes/bun","2.deploy/10.runtimes/bun","simple-icons:bun",{"title":106,"path":107,"stem":108,"icon":109},"Deno","/deploy/runtimes/deno","2.deploy/10.runtimes/deno","simple-icons:deno",false,{"title":112,"path":113,"stem":114,"children":115,"page":110},"Providers","/deploy/providers","2.deploy/20.providers",[116,120,124,128,132,136,140,144,148,152,156,160,164,168,172,176,180,184,188,192,196,200,204],{"title":117,"path":118,"stem":119},"Alwaysdata","/deploy/providers/alwaysdata","2.deploy/20.providers/alwaysdata",{"title":121,"path":122,"stem":123},"AWS Lambda","/deploy/providers/aws","2.deploy/20.providers/aws",{"title":125,"path":126,"stem":127},"AWS Amplify","/deploy/providers/aws-amplify","2.deploy/20.providers/aws-amplify",{"title":129,"path":130,"stem":131},"Azure","/deploy/providers/azure","2.deploy/20.providers/azure",{"title":133,"path":134,"stem":135},"Cleavr","/deploy/providers/cleavr","2.deploy/20.providers/cleavr",{"title":137,"path":138,"stem":139},"Cloudflare","/deploy/providers/cloudflare","2.deploy/20.providers/cloudflare",{"title":141,"path":142,"stem":143},"Deno Deploy","/deploy/providers/deno-deploy","2.deploy/20.providers/deno-deploy",{"title":145,"path":146,"stem":147},"DigitalOcean","/deploy/providers/digitalocean","2.deploy/20.providers/digitalocean",{"title":149,"path":150,"stem":151},"Firebase","/deploy/providers/firebase","2.deploy/20.providers/firebase",{"title":153,"path":154,"stem":155},"Flightcontrol","/deploy/providers/flightcontrol","2.deploy/20.providers/flightcontrol",{"title":157,"path":158,"stem":159},"Genezio","/deploy/providers/genezio","2.deploy/20.providers/genezio",{"title":161,"path":162,"stem":163},"GitHub Pages","/deploy/providers/github-pages","2.deploy/20.providers/github-pages",{"title":165,"path":166,"stem":167},"GitLab Pages","/deploy/providers/gitlab-pages","2.deploy/20.providers/gitlab-pages",{"title":169,"path":170,"stem":171},"Heroku","/deploy/providers/heroku","2.deploy/20.providers/heroku",{"title":173,"path":174,"stem":175},"IIS","/deploy/providers/iis","2.deploy/20.providers/iis",{"title":177,"path":178,"stem":179},"Koyeb","/deploy/providers/koyeb","2.deploy/20.providers/koyeb",{"title":181,"path":182,"stem":183},"Netlify","/deploy/providers/netlify","2.deploy/20.providers/netlify",{"title":185,"path":186,"stem":187},"Platform.sh","/deploy/providers/platform-sh","2.deploy/20.providers/platform-sh",{"title":189,"path":190,"stem":191},"Render.com","/deploy/providers/render","2.deploy/20.providers/render",{"title":193,"path":194,"stem":195},"StormKit","/deploy/providers/stormkit","2.deploy/20.providers/stormkit",{"title":197,"path":198,"stem":199},"Vercel","/deploy/providers/vercel","2.deploy/20.providers/vercel",{"title":201,"path":202,"stem":203},"Zeabur","/deploy/providers/zeabur","2.deploy/20.providers/zeabur",{"title":205,"path":206,"stem":207},"Zerops","/deploy/providers/zerops","2.deploy/20.providers/zerops",{"title":33,"path":209,"stem":210,"children":211,"icon":36},"/config","3.config/0.index",[212],{"title":33,"path":209,"stem":210,"icon":36},{"title":5,"path":214,"stem":215},"/","index",{"id":217,"title":68,"body":218,"description":1204,"extension":1205,"meta":1206,"navigation":1207,"path":69,"seo":1208,"stem":70,"__hash__":1209},"content/1.docs/8.storage.md",{"type":219,"value":220,"toc":1198,"icon":71},"minimark",[221,228,239,243,259,543,546,548,559,638,645,654,657,660,771,781,794,1015,1018,1024,1184,1194],[222,223,224],"warning",{},[225,226,227],"p",{},"Nitro v3 Alpha 文档仍在完善中 — 可能会有更新、不完善之处和偶尔的不准确。",[225,229,230,231,238],{},"Nitro 内置集成了 ",[232,233,237],"a",{"href":234,"rel":235},"https://unstorage.unjs.io",[236],"nofollow","unstorage","，以提供与运行时无关的持久层。",[240,241,242],"h2",{"id":242},"用法",[225,244,245,246,250,251,254,255,258],{},"要使用存储层，可以使用 ",[247,248,249],"code",{},"useStorage()"," 并调用 ",[247,252,253],{},"get(key)"," 来检索项，并使用 ",[247,256,257],{},"set(key, value)"," 来设置项。",[260,261,265],"pre",{"className":262,"code":263,"language":264,"meta":5,"style":5},"language-ts shiki shiki-themes github-light github-dark github-dark","import { useStorage } from \"nitro/runtime\";\n\n// 默认存储在内存中\nawait useStorage().set(\"test:foo\", { hello: \"world\" })\nawait useStorage().get(\"test:foo\")\n\n// 你可以使用数据存储将数据写入默认的 .data/kv 目录\nconst dataStorage = useStorage(\"data\")\nawait dataStorage.set(\"test\", \"works\")\nawait dataStorage.get(\"data:test\") // 值持久化\n\n// 你也可以在 useStorage(base) 中指定基数\nawait useStorage(\"test\").set(\"foo\", { hello: \"world\" })\n\n// 你可以使用泛型来定义类型\nawait useStorage\u003C{ hello: string }>(\"test\").get(\"foo\")\nawait useStorage(\"test\").get\u003C{ hello: string }>(\"foo\")\n","ts",[247,266,267,290,297,304,335,354,359,365,387,410,430,435,441,468,473,479,514],{"__ignoreMap":5},[268,269,272,276,280,283,287],"span",{"class":270,"line":271},"line",1,[268,273,275],{"class":274},"so5gQ","import",[268,277,279],{"class":278},"slsVL"," { useStorage } ",[268,281,282],{"class":274},"from",[268,284,286],{"class":285},"sfrk1"," \"nitro/runtime\"",[268,288,289],{"class":278},";\n",[268,291,293],{"class":270,"line":292},2,[268,294,296],{"emptyLinePlaceholder":295},true,"\n",[268,298,300],{"class":270,"line":299},3,[268,301,303],{"class":302},"sCsY4","// 默认存储在内存中\n",[268,305,307,310,314,317,320,323,326,329,332],{"class":270,"line":306},4,[268,308,309],{"class":274},"await",[268,311,313],{"class":312},"shcOC"," useStorage",[268,315,316],{"class":278},"().",[268,318,319],{"class":312},"set",[268,321,322],{"class":278},"(",[268,324,325],{"class":285},"\"test:foo\"",[268,327,328],{"class":278},", { hello: ",[268,330,331],{"class":285},"\"world\"",[268,333,334],{"class":278}," })\n",[268,336,338,340,342,344,347,349,351],{"class":270,"line":337},5,[268,339,309],{"class":274},[268,341,313],{"class":312},[268,343,316],{"class":278},[268,345,346],{"class":312},"get",[268,348,322],{"class":278},[268,350,325],{"class":285},[268,352,353],{"class":278},")\n",[268,355,357],{"class":270,"line":356},6,[268,358,296],{"emptyLinePlaceholder":295},[268,360,362],{"class":270,"line":361},7,[268,363,364],{"class":302},"// 你可以使用数据存储将数据写入默认的 .data/kv 目录\n",[268,366,368,371,375,378,380,382,385],{"class":270,"line":367},8,[268,369,370],{"class":274},"const",[268,372,374],{"class":373},"suiK_"," dataStorage",[268,376,377],{"class":274}," =",[268,379,313],{"class":312},[268,381,322],{"class":278},[268,383,384],{"class":285},"\"data\"",[268,386,353],{"class":278},[268,388,390,392,395,397,399,402,405,408],{"class":270,"line":389},9,[268,391,309],{"class":274},[268,393,394],{"class":278}," dataStorage.",[268,396,319],{"class":312},[268,398,322],{"class":278},[268,400,401],{"class":285},"\"test\"",[268,403,404],{"class":278},", ",[268,406,407],{"class":285},"\"works\"",[268,409,353],{"class":278},[268,411,413,415,417,419,421,424,427],{"class":270,"line":412},10,[268,414,309],{"class":274},[268,416,394],{"class":278},[268,418,346],{"class":312},[268,420,322],{"class":278},[268,422,423],{"class":285},"\"data:test\"",[268,425,426],{"class":278},") ",[268,428,429],{"class":302},"// 值持久化\n",[268,431,433],{"class":270,"line":432},11,[268,434,296],{"emptyLinePlaceholder":295},[268,436,438],{"class":270,"line":437},12,[268,439,440],{"class":302},"// 你也可以在 useStorage(base) 中指定基数\n",[268,442,444,446,448,450,452,455,457,459,462,464,466],{"class":270,"line":443},13,[268,445,309],{"class":274},[268,447,313],{"class":312},[268,449,322],{"class":278},[268,451,401],{"class":285},[268,453,454],{"class":278},").",[268,456,319],{"class":312},[268,458,322],{"class":278},[268,460,461],{"class":285},"\"foo\"",[268,463,328],{"class":278},[268,465,331],{"class":285},[268,467,334],{"class":278},[268,469,471],{"class":270,"line":470},14,[268,472,296],{"emptyLinePlaceholder":295},[268,474,476],{"class":270,"line":475},15,[268,477,478],{"class":302},"// 你可以使用泛型来定义类型\n",[268,480,482,484,486,489,493,496,499,502,504,506,508,510,512],{"class":270,"line":481},16,[268,483,309],{"class":274},[268,485,313],{"class":312},[268,487,488],{"class":278},"\u003C{ ",[268,490,492],{"class":491},"sQHwn","hello",[268,494,495],{"class":274},":",[268,497,498],{"class":373}," string",[268,500,501],{"class":278}," }>(",[268,503,401],{"class":285},[268,505,454],{"class":278},[268,507,346],{"class":312},[268,509,322],{"class":278},[268,511,461],{"class":285},[268,513,353],{"class":278},[268,515,517,519,521,523,525,527,529,531,533,535,537,539,541],{"class":270,"line":516},17,[268,518,309],{"class":274},[268,520,313],{"class":312},[268,522,322],{"class":278},[268,524,401],{"class":285},[268,526,454],{"class":278},[268,528,346],{"class":312},[268,530,488],{"class":278},[268,532,492],{"class":491},[268,534,495],{"class":274},[268,536,498],{"class":373},[268,538,501],{"class":278},[268,540,461],{"class":285},[268,542,353],{"class":278},[544,545],"read-more",{"to":234},[240,547,33],{"id":33},[225,549,550,551,554,555,558],{},"你可以使用 ",[247,552,553],{},"storage"," 配置挂载一个或多个自定义存储驱动程序。",[556,557],"br",{},"\n键是挂载点名称，值是驱动程序名称和配置。",[260,560,563],{"className":262,"code":561,"filename":562,"language":264,"meta":5,"style":5},"import { defineNitroConfig } from \"nitro/config\";\n\nexport default defineNitroConfig({\n  storage: {\n    redis: {\n      driver: \"redis\",\n      /* redis 连接器选项 */\n    }\n  }\n})\n","nitro.config.ts",[247,564,565,579,583,597,602,607,618,623,628,633],{"__ignoreMap":5},[268,566,567,569,572,574,577],{"class":270,"line":271},[268,568,275],{"class":274},[268,570,571],{"class":278}," { defineNitroConfig } ",[268,573,282],{"class":274},[268,575,576],{"class":285}," \"nitro/config\"",[268,578,289],{"class":278},[268,580,581],{"class":270,"line":292},[268,582,296],{"emptyLinePlaceholder":295},[268,584,585,588,591,594],{"class":270,"line":299},[268,586,587],{"class":274},"export",[268,589,590],{"class":274}," default",[268,592,593],{"class":312}," defineNitroConfig",[268,595,596],{"class":278},"({\n",[268,598,599],{"class":270,"line":306},[268,600,601],{"class":278},"  storage: {\n",[268,603,604],{"class":270,"line":337},[268,605,606],{"class":278},"    redis: {\n",[268,608,609,612,615],{"class":270,"line":356},[268,610,611],{"class":278},"      driver: ",[268,613,614],{"class":285},"\"redis\"",[268,616,617],{"class":278},",\n",[268,619,620],{"class":270,"line":361},[268,621,622],{"class":302},"      /* redis 连接器选项 */\n",[268,624,625],{"class":270,"line":367},[268,626,627],{"class":278},"    }\n",[268,629,630],{"class":270,"line":389},[268,631,632],{"class":278},"  }\n",[268,634,635],{"class":270,"line":412},[268,636,637],{"class":278},"})\n",[225,639,640,641,644],{},"然后，你可以使用 ",[247,642,643],{},"useStorage(\"redis\")"," 函数访问 redis 存储。",[225,646,647,648,653],{},"你可以在 ",[232,649,652],{"href":650,"rel":651},"https://unstorage.unjs.io/",[236],"unstorage 文档"," 中找到驱动程序列表及其配置。",[240,655,656],{"id":656},"仅限开发的挂载点",[225,658,659],{},"默认情况下，Nitro 将在开发时使用文件系统驱动程序挂载项目目录和一些其他目录。",[260,661,665],{"className":662,"code":663,"language":664,"meta":5,"style":5},"language-js shiki shiki-themes github-light github-dark github-dark","// 访问项目根目录\nconst rootStorage = useStorage('root')\n\n// 访问项目 src 目录（默认与根目录相同）\nconst srcStorage = useStorage('src')\n\n// 访问服务器缓存目录\nconst cacheStorage = useStorage('cache')\n\n// 访问临时构建目录\nconst buildStorage = useStorage('build')\n","js",[247,666,667,672,690,694,699,717,721,726,744,748,753],{"__ignoreMap":5},[268,668,669],{"class":270,"line":271},[268,670,671],{"class":302},"// 访问项目根目录\n",[268,673,674,676,679,681,683,685,688],{"class":270,"line":292},[268,675,370],{"class":274},[268,677,678],{"class":373}," rootStorage",[268,680,377],{"class":274},[268,682,313],{"class":312},[268,684,322],{"class":278},[268,686,687],{"class":285},"'root'",[268,689,353],{"class":278},[268,691,692],{"class":270,"line":299},[268,693,296],{"emptyLinePlaceholder":295},[268,695,696],{"class":270,"line":306},[268,697,698],{"class":302},"// 访问项目 src 目录（默认与根目录相同）\n",[268,700,701,703,706,708,710,712,715],{"class":270,"line":337},[268,702,370],{"class":274},[268,704,705],{"class":373}," srcStorage",[268,707,377],{"class":274},[268,709,313],{"class":312},[268,711,322],{"class":278},[268,713,714],{"class":285},"'src'",[268,716,353],{"class":278},[268,718,719],{"class":270,"line":356},[268,720,296],{"emptyLinePlaceholder":295},[268,722,723],{"class":270,"line":361},[268,724,725],{"class":302},"// 访问服务器缓存目录\n",[268,727,728,730,733,735,737,739,742],{"class":270,"line":367},[268,729,370],{"class":274},[268,731,732],{"class":373}," cacheStorage",[268,734,377],{"class":274},[268,736,313],{"class":312},[268,738,322],{"class":278},[268,740,741],{"class":285},"'cache'",[268,743,353],{"class":278},[268,745,746],{"class":270,"line":389},[268,747,296],{"emptyLinePlaceholder":295},[268,749,750],{"class":270,"line":412},[268,751,752],{"class":302},"// 访问临时构建目录\n",[268,754,755,757,760,762,764,766,769],{"class":270,"line":432},[268,756,370],{"class":274},[268,758,759],{"class":373}," buildStorage",[268,761,377],{"class":274},[268,763,313],{"class":312},[268,765,322],{"class":278},[268,767,768],{"class":285},"'build'",[268,770,353],{"class":278},[772,773,774],"tip",{},[225,775,776,777,780],{},"\n你还可以使用 ",[247,778,779],{},"devStorage"," 键在开发期间覆盖存储配置。当你在生产中使用数据库并希望在开发中使用文件系统时，这非常有用。",[225,782,783,784,786,787,790,791,793],{},"为了使用 ",[247,785,779],{}," 键，你需要使用 ",[247,788,789],{},"nitro dev"," 命令，并且 ",[247,792,553],{}," 选项中的键必须与生产的相同。",[795,796,797,908],"CodeGroup",{},[260,798,800],{"className":262,"code":799,"filename":562,"language":264,"meta":5,"style":5},"import { defineNitroConfig } from \"nitro/config\";\n\nexport default defineNitroConfig({\n  // 生产\n  storage: {\n    default: {\n      driver: 'redis',\n      /* redis 连接器选项 */\n    }\n  },\n  // 开发\n  devStorage: {\n    default: {\n      driver: 'fs',\n      base: './data/kv'\n    }\n  }\n})\n",[247,801,802,814,818,828,833,837,842,851,855,859,864,869,874,878,887,895,899,903],{"__ignoreMap":5},[268,803,804,806,808,810,812],{"class":270,"line":271},[268,805,275],{"class":274},[268,807,571],{"class":278},[268,809,282],{"class":274},[268,811,576],{"class":285},[268,813,289],{"class":278},[268,815,816],{"class":270,"line":292},[268,817,296],{"emptyLinePlaceholder":295},[268,819,820,822,824,826],{"class":270,"line":299},[268,821,587],{"class":274},[268,823,590],{"class":274},[268,825,593],{"class":312},[268,827,596],{"class":278},[268,829,830],{"class":270,"line":306},[268,831,832],{"class":302},"  // 生产\n",[268,834,835],{"class":270,"line":337},[268,836,601],{"class":278},[268,838,839],{"class":270,"line":356},[268,840,841],{"class":278},"    default: {\n",[268,843,844,846,849],{"class":270,"line":361},[268,845,611],{"class":278},[268,847,848],{"class":285},"'redis'",[268,850,617],{"class":278},[268,852,853],{"class":270,"line":367},[268,854,622],{"class":302},[268,856,857],{"class":270,"line":389},[268,858,627],{"class":278},[268,860,861],{"class":270,"line":412},[268,862,863],{"class":278},"  },\n",[268,865,866],{"class":270,"line":432},[268,867,868],{"class":302},"  // 开发\n",[268,870,871],{"class":270,"line":437},[268,872,873],{"class":278},"  devStorage: {\n",[268,875,876],{"class":270,"line":443},[268,877,841],{"class":278},[268,879,880,882,885],{"class":270,"line":470},[268,881,611],{"class":278},[268,883,884],{"class":285},"'fs'",[268,886,617],{"class":278},[268,888,889,892],{"class":270,"line":475},[268,890,891],{"class":278},"      base: ",[268,893,894],{"class":285},"'./data/kv'\n",[268,896,897],{"class":270,"line":481},[268,898,627],{"class":278},[268,900,901],{"class":270,"line":516},[268,902,632],{"class":278},[268,904,906],{"class":270,"line":905},18,[268,907,637],{"class":278},[260,909,912],{"className":262,"code":910,"filename":911,"language":264,"meta":5,"style":5},"export default defineNuxtConfig({\n  nitro: {\n    // 生产\n    storage: {\n      db: {\n        driver: 'redis',\n        /* redis 连接器选项 */\n      }\n    },\n    // 开发\n    devStorage: {\n      db: {\n        driver: 'fs',\n        base: './data/db'\n      }\n    }\n  }\n})\n","nuxt.config.ts",[247,913,914,925,930,935,940,945,954,959,964,969,974,979,983,991,999,1003,1007,1011],{"__ignoreMap":5},[268,915,916,918,920,923],{"class":270,"line":271},[268,917,587],{"class":274},[268,919,590],{"class":274},[268,921,922],{"class":312}," defineNuxtConfig",[268,924,596],{"class":278},[268,926,927],{"class":270,"line":292},[268,928,929],{"class":278},"  nitro: {\n",[268,931,932],{"class":270,"line":299},[268,933,934],{"class":302},"    // 生产\n",[268,936,937],{"class":270,"line":306},[268,938,939],{"class":278},"    storage: {\n",[268,941,942],{"class":270,"line":337},[268,943,944],{"class":278},"      db: {\n",[268,946,947,950,952],{"class":270,"line":356},[268,948,949],{"class":278},"        driver: ",[268,951,848],{"class":285},[268,953,617],{"class":278},[268,955,956],{"class":270,"line":361},[268,957,958],{"class":302},"        /* redis 连接器选项 */\n",[268,960,961],{"class":270,"line":367},[268,962,963],{"class":278},"      }\n",[268,965,966],{"class":270,"line":389},[268,967,968],{"class":278},"    },\n",[268,970,971],{"class":270,"line":412},[268,972,973],{"class":302},"    // 开发\n",[268,975,976],{"class":270,"line":432},[268,977,978],{"class":278},"    devStorage: {\n",[268,980,981],{"class":270,"line":437},[268,982,944],{"class":278},[268,984,985,987,989],{"class":270,"line":443},[268,986,949],{"class":278},[268,988,884],{"class":285},[268,990,617],{"class":278},[268,992,993,996],{"class":270,"line":470},[268,994,995],{"class":278},"        base: ",[268,997,998],{"class":285},"'./data/db'\n",[268,1000,1001],{"class":270,"line":475},[268,1002,963],{"class":278},[268,1004,1005],{"class":270,"line":481},[268,1006,627],{"class":278},[268,1008,1009],{"class":270,"line":516},[268,1010,632],{"class":278},[268,1012,1013],{"class":270,"line":905},[268,1014,637],{"class":278},[240,1016,1017],{"id":1017},"运行时配置",[225,1019,1020,1021,1023],{},"在挂载点配置在运行时不确定的场景下，Nitro 可以在启动时动态添加挂载点，使用 ",[232,1022,48],{"href":49},"。",[260,1025,1028],{"className":262,"code":1026,"filename":1027,"language":264,"meta":5,"style":5},"import { defineNitroPlugin, useStorage } from \"nitro/runtime\";\nimport redisDriver from \"unstorage/drivers/redis\";\n\nexport default defineNitroPlugin(() => {\n  const storage = useStorage()\n\n  // 动态传入运行时配置或其他来源的凭证\n  const driver = redisDriver({\n    base: \"redis\",\n    host: process.env.REDIS_HOST,\n    port: process.env.REDIS_PORT,\n    /* 其他 redis 连接器选项 */\n  })\n\n  // 挂载驱动程序\n  storage.mount(\"redis\", driver)\n})\n","plugins/storage.ts",[247,1029,1030,1043,1057,1061,1079,1094,1098,1103,1117,1126,1136,1146,1151,1156,1160,1165,1180],{"__ignoreMap":5},[268,1031,1032,1034,1037,1039,1041],{"class":270,"line":271},[268,1033,275],{"class":274},[268,1035,1036],{"class":278}," { defineNitroPlugin, useStorage } ",[268,1038,282],{"class":274},[268,1040,286],{"class":285},[268,1042,289],{"class":278},[268,1044,1045,1047,1050,1052,1055],{"class":270,"line":292},[268,1046,275],{"class":274},[268,1048,1049],{"class":278}," redisDriver ",[268,1051,282],{"class":274},[268,1053,1054],{"class":285}," \"unstorage/drivers/redis\"",[268,1056,289],{"class":278},[268,1058,1059],{"class":270,"line":299},[268,1060,296],{"emptyLinePlaceholder":295},[268,1062,1063,1065,1067,1070,1073,1076],{"class":270,"line":306},[268,1064,587],{"class":274},[268,1066,590],{"class":274},[268,1068,1069],{"class":312}," defineNitroPlugin",[268,1071,1072],{"class":278},"(() ",[268,1074,1075],{"class":274},"=>",[268,1077,1078],{"class":278}," {\n",[268,1080,1081,1084,1087,1089,1091],{"class":270,"line":337},[268,1082,1083],{"class":274},"  const",[268,1085,1086],{"class":373}," storage",[268,1088,377],{"class":274},[268,1090,313],{"class":312},[268,1092,1093],{"class":278},"()\n",[268,1095,1096],{"class":270,"line":356},[268,1097,296],{"emptyLinePlaceholder":295},[268,1099,1100],{"class":270,"line":361},[268,1101,1102],{"class":302},"  // 动态传入运行时配置或其他来源的凭证\n",[268,1104,1105,1107,1110,1112,1115],{"class":270,"line":367},[268,1106,1083],{"class":274},[268,1108,1109],{"class":373}," driver",[268,1111,377],{"class":274},[268,1113,1114],{"class":312}," redisDriver",[268,1116,596],{"class":278},[268,1118,1119,1122,1124],{"class":270,"line":389},[268,1120,1121],{"class":278},"    base: ",[268,1123,614],{"class":285},[268,1125,617],{"class":278},[268,1127,1128,1131,1134],{"class":270,"line":412},[268,1129,1130],{"class":278},"    host: process.env.",[268,1132,1133],{"class":373},"REDIS_HOST",[268,1135,617],{"class":278},[268,1137,1138,1141,1144],{"class":270,"line":432},[268,1139,1140],{"class":278},"    port: process.env.",[268,1142,1143],{"class":373},"REDIS_PORT",[268,1145,617],{"class":278},[268,1147,1148],{"class":270,"line":437},[268,1149,1150],{"class":302},"    /* 其他 redis 连接器选项 */\n",[268,1152,1153],{"class":270,"line":443},[268,1154,1155],{"class":278},"  })\n",[268,1157,1158],{"class":270,"line":470},[268,1159,296],{"emptyLinePlaceholder":295},[268,1161,1162],{"class":270,"line":475},[268,1163,1164],{"class":302},"  // 挂载驱动程序\n",[268,1166,1167,1170,1173,1175,1177],{"class":270,"line":481},[268,1168,1169],{"class":278},"  storage.",[268,1171,1172],{"class":312},"mount",[268,1174,322],{"class":278},[268,1176,614],{"class":285},[268,1178,1179],{"class":278},", driver)\n",[268,1181,1182],{"class":270,"line":516},[268,1183,637],{"class":278},[222,1185,1186],{},[225,1187,1188,1189,1023],{},"这是一个临时解决方案，未来会有更好的解决方案！请关注 GitHub 问题 ",[232,1190,1193],{"href":1191,"rel":1192},"https://github.com/nitrojs/nitro/issues/1161#issuecomment-1511444675",[236],"这里",[1195,1196,1197],"style",{},"html pre.shiki code .so5gQ, html code.shiki .so5gQ{--shiki-light:#D73A49;--shiki-default:#F97583;--shiki-dark:#F97583}html pre.shiki code .slsVL, html code.shiki .slsVL{--shiki-light:#24292E;--shiki-default:#E1E4E8;--shiki-dark:#E1E4E8}html pre.shiki code .sfrk1, html code.shiki .sfrk1{--shiki-light:#032F62;--shiki-default:#9ECBFF;--shiki-dark:#9ECBFF}html pre.shiki code .sCsY4, html code.shiki .sCsY4{--shiki-light:#6A737D;--shiki-default:#6A737D;--shiki-dark:#6A737D}html pre.shiki code .shcOC, html code.shiki .shcOC{--shiki-light:#6F42C1;--shiki-default:#B392F0;--shiki-dark:#B392F0}html pre.shiki code .suiK_, html code.shiki .suiK_{--shiki-light:#005CC5;--shiki-default:#79B8FF;--shiki-dark:#79B8FF}html pre.shiki code .sQHwn, html code.shiki .sQHwn{--shiki-light:#E36209;--shiki-default:#FFAB70;--shiki-dark:#FFAB70}html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":5,"searchDepth":292,"depth":292,"links":1199},[1200,1201,1202,1203],{"id":242,"depth":292,"text":242},{"id":33,"depth":292,"text":33},{"id":656,"depth":292,"text":656},{"id":1017,"depth":292,"text":1017},"Nitro 提供了一个内置存储层，可以抽象文件系统、数据库或任何其他数据源。","md",{"icon":71},{"icon":71},{"title":68,"description":1204},"a8wJn5DO2bOLb9L8DQUKOYWmzbUrjYnR27MDlw13lIo",[1211,1213],{"title":63,"path":64,"stem":65,"description":1212,"icon":66,"children":-1},"Nitro 提供了一种构建在存储层之上的缓存系统。",{"title":73,"path":74,"stem":75,"description":5,"icon":76,"children":-1},1761554644073]