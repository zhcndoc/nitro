[{"data":1,"prerenderedAt":1850},["ShallowReactive",2],{"navigation":3,"-docs-cache":216,"-docs-cache-surround":1845},[4,83,208,213],{"title":5,"path":6,"stem":7,"children":8,"icon":82},"","/docs","1.docs/1.index",[9,12,17,22,27,32,37,42,47,52,57,62,67,72,77],{"title":10,"path":6,"stem":7,"icon":11},"介绍","i-lucide-compass",{"title":13,"path":14,"stem":15,"icon":16},"快速开始","/docs/quick-start","1.docs/2.quick-start","i-lucide-zap",{"title":18,"path":19,"stem":20,"icon":21},"渲染器","/docs/renderer","1.docs/4.renderer","ri:layout-masonry-line",{"title":23,"path":24,"stem":25,"icon":26},"服务器路由","/docs/routing","1.docs/5.routing","ri:direction-line",{"title":28,"path":29,"stem":30,"icon":31},"资源","/docs/assets","1.docs/50.assets","ri:image-2-line",{"title":33,"path":34,"stem":35,"icon":36},"配置","/docs/configuration","1.docs/50.configuration","ri:settings-3-line",{"title":38,"path":39,"stem":40,"icon":41},"数据库","/docs/database","1.docs/50.database","ri:database-2-line",{"title":43,"path":44,"stem":45,"icon":46},"生命周期","/docs/lifecycle","1.docs/50.lifecycle","i-lucide-layers",{"title":48,"path":49,"stem":50,"icon":51},"插件","/docs/plugins","1.docs/50.plugins","ri:plug-line",{"title":53,"path":54,"stem":55,"icon":56},"任务","/docs/tasks","1.docs/50.tasks","codicon:run-all",{"title":58,"path":59,"stem":60,"icon":61},"服务器入口","/docs/server-entry","1.docs/6.server-entry","ri:server-line",{"title":63,"path":64,"stem":65,"icon":66},"缓存","/docs/cache","1.docs/7.cache","ri:speed-line",{"title":68,"path":69,"stem":70,"icon":71},"KV 存储","/docs/storage","1.docs/8.storage","carbon:datastore",{"title":73,"path":74,"stem":75,"icon":76},"迁移指南","/docs/migration","1.docs/99.migration","ri:arrow-right-up-line",{"title":78,"path":79,"stem":80,"icon":81},"夜间通道","/docs/nightly","1.docs/99.nightly","ri:moon-fill","i-lucide-book-open",{"title":84,"path":85,"stem":86,"children":87,"icon":89},"概述","/deploy","2.deploy/0.index",[88,90,111],{"title":84,"path":85,"stem":86,"icon":89},"ri:upload-cloud-2-line",{"title":91,"path":92,"stem":93,"children":94,"page":110},"Runtimes","/deploy/runtimes","2.deploy/10.runtimes",[95,100,105],{"title":96,"path":97,"stem":98,"icon":99},"Node.js","/deploy/runtimes/node","2.deploy/10.runtimes/1.node","akar-icons:node-fill",{"title":101,"path":102,"stem":103,"icon":104},"Bun","/deploy/runtimes/bun","2.deploy/10.runtimes/bun","simple-icons:bun",{"title":106,"path":107,"stem":108,"icon":109},"Deno","/deploy/runtimes/deno","2.deploy/10.runtimes/deno","simple-icons:deno",false,{"title":112,"path":113,"stem":114,"children":115,"page":110},"Providers","/deploy/providers","2.deploy/20.providers",[116,120,124,128,132,136,140,144,148,152,156,160,164,168,172,176,180,184,188,192,196,200,204],{"title":117,"path":118,"stem":119},"Alwaysdata","/deploy/providers/alwaysdata","2.deploy/20.providers/alwaysdata",{"title":121,"path":122,"stem":123},"AWS Lambda","/deploy/providers/aws","2.deploy/20.providers/aws",{"title":125,"path":126,"stem":127},"AWS Amplify","/deploy/providers/aws-amplify","2.deploy/20.providers/aws-amplify",{"title":129,"path":130,"stem":131},"Azure","/deploy/providers/azure","2.deploy/20.providers/azure",{"title":133,"path":134,"stem":135},"Cleavr","/deploy/providers/cleavr","2.deploy/20.providers/cleavr",{"title":137,"path":138,"stem":139},"Cloudflare","/deploy/providers/cloudflare","2.deploy/20.providers/cloudflare",{"title":141,"path":142,"stem":143},"Deno Deploy","/deploy/providers/deno-deploy","2.deploy/20.providers/deno-deploy",{"title":145,"path":146,"stem":147},"DigitalOcean","/deploy/providers/digitalocean","2.deploy/20.providers/digitalocean",{"title":149,"path":150,"stem":151},"Firebase","/deploy/providers/firebase","2.deploy/20.providers/firebase",{"title":153,"path":154,"stem":155},"Flightcontrol","/deploy/providers/flightcontrol","2.deploy/20.providers/flightcontrol",{"title":157,"path":158,"stem":159},"Genezio","/deploy/providers/genezio","2.deploy/20.providers/genezio",{"title":161,"path":162,"stem":163},"GitHub Pages","/deploy/providers/github-pages","2.deploy/20.providers/github-pages",{"title":165,"path":166,"stem":167},"GitLab Pages","/deploy/providers/gitlab-pages","2.deploy/20.providers/gitlab-pages",{"title":169,"path":170,"stem":171},"Heroku","/deploy/providers/heroku","2.deploy/20.providers/heroku",{"title":173,"path":174,"stem":175},"IIS","/deploy/providers/iis","2.deploy/20.providers/iis",{"title":177,"path":178,"stem":179},"Koyeb","/deploy/providers/koyeb","2.deploy/20.providers/koyeb",{"title":181,"path":182,"stem":183},"Netlify","/deploy/providers/netlify","2.deploy/20.providers/netlify",{"title":185,"path":186,"stem":187},"Platform.sh","/deploy/providers/platform-sh","2.deploy/20.providers/platform-sh",{"title":189,"path":190,"stem":191},"Render.com","/deploy/providers/render","2.deploy/20.providers/render",{"title":193,"path":194,"stem":195},"StormKit","/deploy/providers/stormkit","2.deploy/20.providers/stormkit",{"title":197,"path":198,"stem":199},"Vercel","/deploy/providers/vercel","2.deploy/20.providers/vercel",{"title":201,"path":202,"stem":203},"Zeabur","/deploy/providers/zeabur","2.deploy/20.providers/zeabur",{"title":205,"path":206,"stem":207},"Zerops","/deploy/providers/zerops","2.deploy/20.providers/zerops",{"title":33,"path":209,"stem":210,"children":211,"icon":36},"/config","3.config/0.index",[212],{"title":33,"path":209,"stem":210,"icon":36},{"title":5,"path":214,"stem":215},"/","index",{"id":217,"title":63,"body":218,"description":1839,"extension":1840,"meta":1841,"navigation":1842,"path":64,"seo":1843,"stem":65,"__hash__":1844},"content/1.docs/7.cache.md",{"type":219,"value":220,"toc":1829,"icon":66},"minimark",[221,228,232,240,253,351,358,375,381,394,397,404,407,686,697,750,755,764,768,775,787,1037,1040,1043,1046,1053,1120,1132,1233,1235,1242,1268,1278,1348,1355,1440,1443,1451,1587,1590,1598,1647,1650,1743,1746,1769,1772,1819,1825],[222,223,224],"warning",{},[225,226,227],"p",{},"Nitro v3 Alpha 文档仍在开发中 — 可能会有更新、不完善之处和偶发的不准确。",[229,230,231],"h2",{"id":231},"缓存的事件处理器",[225,233,234,235,239],{},"要缓存事件处理器，您只需使用 ",[236,237,238],"code",{},"defineCachedHandler"," 方法。",[225,241,242,243,246,247,252],{},"它的用法类似于 ",[236,244,245],{},"defineHandler","，但增加了第二个 ",[248,249,251],"a",{"href":250},"#options","options"," 参数用于缓存配置。",[254,255,260],"pre",{"className":256,"code":257,"filename":258,"language":259,"meta":5,"style":5},"language-ts shiki shiki-themes github-light github-dark github-dark","import { defineCachedHandler } from \"nitro/runtime\";\n\nexport default defineCachedHandler((event) => {\n  return \"我被缓存一小时\";\n}, { maxAge: 60 * 60 });\n","routes/cached.ts","ts",[236,261,262,285,292,321,332],{"__ignoreMap":5},[263,264,267,271,275,278,282],"span",{"class":265,"line":266},"line",1,[263,268,270],{"class":269},"so5gQ","import",[263,272,274],{"class":273},"slsVL"," { defineCachedHandler } ",[263,276,277],{"class":269},"from",[263,279,281],{"class":280},"sfrk1"," \"nitro/runtime\"",[263,283,284],{"class":273},";\n",[263,286,288],{"class":265,"line":287},2,[263,289,291],{"emptyLinePlaceholder":290},true,"\n",[263,293,295,298,301,305,308,312,315,318],{"class":265,"line":294},3,[263,296,297],{"class":269},"export",[263,299,300],{"class":269}," default",[263,302,304],{"class":303},"shcOC"," defineCachedHandler",[263,306,307],{"class":273},"((",[263,309,311],{"class":310},"sQHwn","event",[263,313,314],{"class":273},") ",[263,316,317],{"class":269},"=>",[263,319,320],{"class":273}," {\n",[263,322,324,327,330],{"class":265,"line":323},4,[263,325,326],{"class":269},"  return",[263,328,329],{"class":280}," \"我被缓存一小时\"",[263,331,284],{"class":273},[263,333,335,338,342,345,348],{"class":265,"line":334},5,[263,336,337],{"class":273},"}, { maxAge: ",[263,339,341],{"class":340},"suiK_","60",[263,343,344],{"class":269}," *",[263,346,347],{"class":340}," 60",[263,349,350],{"class":273}," });\n",[225,352,353,354,357],{},"在此示例中，响应将在 1 小时内被缓存，同时在后台更新缓存时，将发送一个过期值到客户端。如果您希望立即返回更新后的响应，请设置 ",[236,355,356],{},"swr: false","。",[359,360,361],"important",{},[225,362,363,367,368,374],{},[364,365,366],"strong",{},"处理缓存响应时，所有传入的请求头都会被丢弃。"," 如果您定义了 ",[248,369,370,373],{"href":250},[236,371,372],{},"varies"," 选项","，则只有指定的请求头会在缓存和提供响应时被考虑。",[225,376,377,378,380],{},"有关可用选项的更多详细信息，请参阅 ",[248,379,251],{"href":250}," 部分。",[382,383,384],"note",{},[225,385,386,387,390,391,393],{},"您也可以使用 ",[236,388,389],{},"cachedEventHandler"," 方法作为 ",[236,392,238],{}," 的别名。",[229,395,396],{"id":396},"缓存的函数",[225,398,399,400,403],{},"您还可以使用 ",[236,401,402],{},"defineCachedFunction"," 函数缓存一个普通函数。对于缓存并复用多个处理器中调用的非事件处理器函数返回值非常有用。",[225,405,406],{},"例如，您可能想要缓存一个 API 调用的结果，缓存时间为 1 小时：",[254,408,411],{"className":256,"code":409,"filename":410,"language":259,"meta":5,"style":5},"import { defineHandler, defineCachedFunction } from \"nitro/runtime\";\n\nexport default defineHandler(async (event) => {\n  const { repo } = event.context.params;\n  const stars = await cachedGHStars(repo).catch(() => 0)\n\n  return { repo, stars }\n});\n\nconst cachedGHStars = defineCachedFunction(async (repo: string) => {\n  const data = await fetch(`https://api.github.com/repos/${repo}`).then(res => res.json());\n\n  return data.stargazers_count;\n}, {\n  maxAge: 60 * 60,\n  name: \"ghStars\",\n  getKey: (repo: string) => repo\n});\n","routes/api/stars/[...repo].ts",[236,412,413,426,430,456,476,509,514,522,528,533,566,614,619,627,633,648,659,681],{"__ignoreMap":5},[263,414,415,417,420,422,424],{"class":265,"line":266},[263,416,270],{"class":269},[263,418,419],{"class":273}," { defineHandler, defineCachedFunction } ",[263,421,277],{"class":269},[263,423,281],{"class":280},[263,425,284],{"class":273},[263,427,428],{"class":265,"line":287},[263,429,291],{"emptyLinePlaceholder":290},[263,431,432,434,436,439,442,445,448,450,452,454],{"class":265,"line":294},[263,433,297],{"class":269},[263,435,300],{"class":269},[263,437,438],{"class":303}," defineHandler",[263,440,441],{"class":273},"(",[263,443,444],{"class":269},"async",[263,446,447],{"class":273}," (",[263,449,311],{"class":310},[263,451,314],{"class":273},[263,453,317],{"class":269},[263,455,320],{"class":273},[263,457,458,461,464,467,470,473],{"class":265,"line":323},[263,459,460],{"class":269},"  const",[263,462,463],{"class":273}," { ",[263,465,466],{"class":340},"repo",[263,468,469],{"class":273}," } ",[263,471,472],{"class":269},"=",[263,474,475],{"class":273}," event.context.params;\n",[263,477,478,480,483,486,489,492,495,498,501,503,506],{"class":265,"line":334},[263,479,460],{"class":269},[263,481,482],{"class":340}," stars",[263,484,485],{"class":269}," =",[263,487,488],{"class":269}," await",[263,490,491],{"class":303}," cachedGHStars",[263,493,494],{"class":273},"(repo).",[263,496,497],{"class":303},"catch",[263,499,500],{"class":273},"(() ",[263,502,317],{"class":269},[263,504,505],{"class":340}," 0",[263,507,508],{"class":273},")\n",[263,510,512],{"class":265,"line":511},6,[263,513,291],{"emptyLinePlaceholder":290},[263,515,517,519],{"class":265,"line":516},7,[263,518,326],{"class":269},[263,520,521],{"class":273}," { repo, stars }\n",[263,523,525],{"class":265,"line":524},8,[263,526,527],{"class":273},"});\n",[263,529,531],{"class":265,"line":530},9,[263,532,291],{"emptyLinePlaceholder":290},[263,534,536,539,541,543,546,548,550,552,554,557,560,562,564],{"class":265,"line":535},10,[263,537,538],{"class":269},"const",[263,540,491],{"class":340},[263,542,485],{"class":269},[263,544,545],{"class":303}," defineCachedFunction",[263,547,441],{"class":273},[263,549,444],{"class":269},[263,551,447],{"class":273},[263,553,466],{"class":310},[263,555,556],{"class":269},":",[263,558,559],{"class":340}," string",[263,561,314],{"class":273},[263,563,317],{"class":269},[263,565,320],{"class":273},[263,567,569,571,574,576,578,581,583,586,588,591,594,597,599,602,605,608,611],{"class":265,"line":568},11,[263,570,460],{"class":269},[263,572,573],{"class":340}," data",[263,575,485],{"class":269},[263,577,488],{"class":269},[263,579,580],{"class":303}," fetch",[263,582,441],{"class":273},[263,584,585],{"class":280},"`https://api.github.com/repos/${",[263,587,466],{"class":273},[263,589,590],{"class":280},"}`",[263,592,593],{"class":273},").",[263,595,596],{"class":303},"then",[263,598,441],{"class":273},[263,600,601],{"class":310},"res",[263,603,604],{"class":269}," =>",[263,606,607],{"class":273}," res.",[263,609,610],{"class":303},"json",[263,612,613],{"class":273},"());\n",[263,615,617],{"class":265,"line":616},12,[263,618,291],{"emptyLinePlaceholder":290},[263,620,622,624],{"class":265,"line":621},13,[263,623,326],{"class":269},[263,625,626],{"class":273}," data.stargazers_count;\n",[263,628,630],{"class":265,"line":629},14,[263,631,632],{"class":273},"}, {\n",[263,634,636,639,641,643,645],{"class":265,"line":635},15,[263,637,638],{"class":273},"  maxAge: ",[263,640,341],{"class":340},[263,642,344],{"class":269},[263,644,347],{"class":340},[263,646,647],{"class":273},",\n",[263,649,651,654,657],{"class":265,"line":650},16,[263,652,653],{"class":273},"  name: ",[263,655,656],{"class":280},"\"ghStars\"",[263,658,647],{"class":273},[263,660,662,665,668,670,672,674,676,678],{"class":265,"line":661},17,[263,663,664],{"class":303},"  getKey",[263,666,667],{"class":273},": (",[263,669,466],{"class":310},[263,671,556],{"class":269},[263,673,559],{"class":340},[263,675,314],{"class":273},[263,677,317],{"class":269},[263,679,680],{"class":273}," repo\n",[263,682,684],{"class":265,"line":683},18,[263,685,527],{"class":273},[225,687,688,689,692,693,696],{},"在开发环境中，星星数量将被缓存到 ",[236,690,691],{},".nitro/cache/functions/ghStars/\u003Cowner>/\u003Crepo>.json"," 中，",[236,694,695],{},"value"," 是星星的数量：",[254,698,701],{"className":699,"code":700,"language":610,"meta":5,"style":5},"language-json shiki shiki-themes github-light github-dark github-dark","{\"expires\":1677851092249,\"value\":43991,\"mtime\":1677847492540,\"integrity\":\"ZUHcsxCWEH\"}\n",[236,702,703],{"__ignoreMap":5},[263,704,705,708,711,713,716,719,722,724,727,729,732,734,737,739,742,744,747],{"class":265,"line":266},[263,706,707],{"class":273},"{",[263,709,710],{"class":340},"\"expires\"",[263,712,556],{"class":273},[263,714,715],{"class":340},"1677851092249",[263,717,718],{"class":273},",",[263,720,721],{"class":340},"\"value\"",[263,723,556],{"class":273},[263,725,726],{"class":340},"43991",[263,728,718],{"class":273},[263,730,731],{"class":340},"\"mtime\"",[263,733,556],{"class":273},[263,735,736],{"class":340},"1677847492540",[263,738,718],{"class":273},[263,740,741],{"class":340},"\"integrity\"",[263,743,556],{"class":273},[263,745,746],{"class":280},"\"ZUHcsxCWEH\"",[263,748,749],{"class":273},"}\n",[359,751,752],{},[225,753,754],{},"由于缓存数据被序列化为 JSON，因此非常重要的是，缓存的函数不能返回任何无法序列化的内容，如 Symbols、Maps、Sets 等。",[382,756,757],{},[225,758,386,759,390,762,393],{},[236,760,761],{},"cachedFunction",[236,763,402],{},[765,766,767],"h3",{"id":767},"边缘工作者",[225,769,770,771,774],{},"如果您使用边缘工作者部署应用，每个请求后实例都会被销毁。Nitro 会自动使用 ",[236,772,773],{},"event.waitUntil"," 来在缓存更新时保持实例存活，同时将响应发送给客户端。",[225,776,777,778],{},"为了确保您的缓存函数在边缘工作者中如预期工作，",[364,779,780,781,783,784,786],{},"应该始终将 ",[236,782,311],{}," 作为第一个参数传递给用 ",[236,785,402],{}," 定义的函数。",[254,788,791],{"className":256,"code":789,"filename":410,"highlights":790,"language":259,"meta":5,"style":5},"import { defineHandler, defineCachedFunction, type H3Event } from \"nitro/runtime\";\n\nexport default defineHandler(async (event) => {\n  const { repo } = event.context.params;\n  const stars = await cachedGHStars(event, repo).catch(() => 0)\n\n  return { repo, stars }\n});\n\nconst cachedGHStars = defineCachedFunction(async (event: H3Event, repo: string) => {\n  const data = await fetch(`https://api.github.com/repos/${repo}`).then(res => res.json());\n\n  return data.stargazers_count;\n}, {\n  maxAge: 60 * 60,\n  name: \"ghStars\",\n  getKey: (event: H3Event, repo: string) => repo\n});\n",[334,535,661],[236,792,793,812,816,838,852,879,883,889,893,897,936,972,976,982,986,998,1006,1033],{"__ignoreMap":5},[263,794,795,797,800,803,806,808,810],{"class":265,"line":266},[263,796,270],{"class":269},[263,798,799],{"class":273}," { defineHandler, defineCachedFunction, ",[263,801,802],{"class":269},"type",[263,804,805],{"class":273}," H3Event } ",[263,807,277],{"class":269},[263,809,281],{"class":280},[263,811,284],{"class":273},[263,813,814],{"class":265,"line":287},[263,815,291],{"emptyLinePlaceholder":290},[263,817,818,820,822,824,826,828,830,832,834,836],{"class":265,"line":294},[263,819,297],{"class":269},[263,821,300],{"class":269},[263,823,438],{"class":303},[263,825,441],{"class":273},[263,827,444],{"class":269},[263,829,447],{"class":273},[263,831,311],{"class":310},[263,833,314],{"class":273},[263,835,317],{"class":269},[263,837,320],{"class":273},[263,839,840,842,844,846,848,850],{"class":265,"line":323},[263,841,460],{"class":269},[263,843,463],{"class":273},[263,845,466],{"class":340},[263,847,469],{"class":273},[263,849,472],{"class":269},[263,851,475],{"class":273},[263,853,856,858,860,862,864,866,869,871,873,875,877],{"class":854,"line":334},[265,855],"highlight",[263,857,460],{"class":269},[263,859,482],{"class":340},[263,861,485],{"class":269},[263,863,488],{"class":269},[263,865,491],{"class":303},[263,867,868],{"class":273},"(event, repo).",[263,870,497],{"class":303},[263,872,500],{"class":273},[263,874,317],{"class":269},[263,876,505],{"class":340},[263,878,508],{"class":273},[263,880,881],{"class":265,"line":511},[263,882,291],{"emptyLinePlaceholder":290},[263,884,885,887],{"class":265,"line":516},[263,886,326],{"class":269},[263,888,521],{"class":273},[263,890,891],{"class":265,"line":524},[263,892,527],{"class":273},[263,894,895],{"class":265,"line":530},[263,896,291],{"emptyLinePlaceholder":290},[263,898,900,902,904,906,908,910,912,914,916,918,921,924,926,928,930,932,934],{"class":899,"line":535},[265,855],[263,901,538],{"class":269},[263,903,491],{"class":340},[263,905,485],{"class":269},[263,907,545],{"class":303},[263,909,441],{"class":273},[263,911,444],{"class":269},[263,913,447],{"class":273},[263,915,311],{"class":310},[263,917,556],{"class":269},[263,919,920],{"class":303}," H3Event",[263,922,923],{"class":273},", ",[263,925,466],{"class":310},[263,927,556],{"class":269},[263,929,559],{"class":340},[263,931,314],{"class":273},[263,933,317],{"class":269},[263,935,320],{"class":273},[263,937,938,940,942,944,946,948,950,952,954,956,958,960,962,964,966,968,970],{"class":265,"line":568},[263,939,460],{"class":269},[263,941,573],{"class":340},[263,943,485],{"class":269},[263,945,488],{"class":269},[263,947,580],{"class":303},[263,949,441],{"class":273},[263,951,585],{"class":280},[263,953,466],{"class":273},[263,955,590],{"class":280},[263,957,593],{"class":273},[263,959,596],{"class":303},[263,961,441],{"class":273},[263,963,601],{"class":310},[263,965,604],{"class":269},[263,967,607],{"class":273},[263,969,610],{"class":303},[263,971,613],{"class":273},[263,973,974],{"class":265,"line":616},[263,975,291],{"emptyLinePlaceholder":290},[263,977,978,980],{"class":265,"line":621},[263,979,326],{"class":269},[263,981,626],{"class":273},[263,983,984],{"class":265,"line":629},[263,985,632],{"class":273},[263,987,988,990,992,994,996],{"class":265,"line":635},[263,989,638],{"class":273},[263,991,341],{"class":340},[263,993,344],{"class":269},[263,995,347],{"class":340},[263,997,647],{"class":273},[263,999,1000,1002,1004],{"class":265,"line":650},[263,1001,653],{"class":273},[263,1003,656],{"class":280},[263,1005,647],{"class":273},[263,1007,1009,1011,1013,1015,1017,1019,1021,1023,1025,1027,1029,1031],{"class":1008,"line":661},[265,855],[263,1010,664],{"class":303},[263,1012,667],{"class":273},[263,1014,311],{"class":310},[263,1016,556],{"class":269},[263,1018,920],{"class":303},[263,1020,923],{"class":273},[263,1022,466],{"class":310},[263,1024,556],{"class":269},[263,1026,559],{"class":340},[263,1028,314],{"class":273},[263,1030,317],{"class":269},[263,1032,680],{"class":273},[263,1034,1035],{"class":265,"line":683},[263,1036,527],{"class":273},[225,1038,1039],{},"通过这种方式，函数将在更新缓存时能够保持实例存活而不会减慢客户端的响应速度。",[229,1041,1042],{"id":1042},"缓存路由规则",[225,1044,1045],{},"此功能使您能够在主配置文件中直接添加基于通配符模式的缓存路由。这对于为应用程序的一部分提供全局缓存策略特别有用。",[225,1047,1048,1049,1052],{},"使用 ",[236,1050,1051],{},"stale-while-revalidate"," 行为缓存所有博客路由 1 小时：",[254,1054,1057],{"className":256,"code":1055,"filename":1056,"language":259,"meta":5,"style":5},"import { defineNitroConfig } from \"nitro/config\";\n\nexport default defineNitroConfig({\n  routeRules: {\n    \"/blog/**\": { cache: { maxAge: 60 * 60 } },\n  },\n});\n","nitro.config.ts",[236,1058,1059,1073,1077,1089,1094,1111,1116],{"__ignoreMap":5},[263,1060,1061,1063,1066,1068,1071],{"class":265,"line":266},[263,1062,270],{"class":269},[263,1064,1065],{"class":273}," { defineNitroConfig } ",[263,1067,277],{"class":269},[263,1069,1070],{"class":280}," \"nitro/config\"",[263,1072,284],{"class":273},[263,1074,1075],{"class":265,"line":287},[263,1076,291],{"emptyLinePlaceholder":290},[263,1078,1079,1081,1083,1086],{"class":265,"line":294},[263,1080,297],{"class":269},[263,1082,300],{"class":269},[263,1084,1085],{"class":303}," defineNitroConfig",[263,1087,1088],{"class":273},"({\n",[263,1090,1091],{"class":265,"line":323},[263,1092,1093],{"class":273},"  routeRules: {\n",[263,1095,1096,1099,1102,1104,1106,1108],{"class":265,"line":334},[263,1097,1098],{"class":280},"    \"/blog/**\"",[263,1100,1101],{"class":273},": { cache: { maxAge: ",[263,1103,341],{"class":340},[263,1105,344],{"class":269},[263,1107,347],{"class":340},[263,1109,1110],{"class":273}," } },\n",[263,1112,1113],{"class":265,"line":511},[263,1114,1115],{"class":273},"  },\n",[263,1117,1118],{"class":265,"line":516},[263,1119,527],{"class":273},[225,1121,1122,1123,1127,1128,1131],{},"如果想使用一个 ",[248,1124,1126],{"href":1125},"#cache-storage","自定义缓存存储"," 挂载点，可以使用 ",[236,1129,1130],{},"base"," 选项：",[254,1133,1135],{"className":256,"code":1134,"filename":1056,"language":259,"meta":5,"style":5},"import { defineNitroConfig } from \"nitro/config\";\n\nexport default defineNitroConfig({\n  storage: {\n    redis: {\n      driver: \"redis\",\n      url: \"redis://localhost:6379\",\n    },\n  },\n  routeRules: {\n    \"/blog/**\": { cache: { maxAge: 60 * 60, base: \"redis\" } },\n  },\n});\n",[236,1136,1137,1149,1153,1163,1168,1173,1183,1193,1198,1202,1206,1225,1229],{"__ignoreMap":5},[263,1138,1139,1141,1143,1145,1147],{"class":265,"line":266},[263,1140,270],{"class":269},[263,1142,1065],{"class":273},[263,1144,277],{"class":269},[263,1146,1070],{"class":280},[263,1148,284],{"class":273},[263,1150,1151],{"class":265,"line":287},[263,1152,291],{"emptyLinePlaceholder":290},[263,1154,1155,1157,1159,1161],{"class":265,"line":294},[263,1156,297],{"class":269},[263,1158,300],{"class":269},[263,1160,1085],{"class":303},[263,1162,1088],{"class":273},[263,1164,1165],{"class":265,"line":323},[263,1166,1167],{"class":273},"  storage: {\n",[263,1169,1170],{"class":265,"line":334},[263,1171,1172],{"class":273},"    redis: {\n",[263,1174,1175,1178,1181],{"class":265,"line":511},[263,1176,1177],{"class":273},"      driver: ",[263,1179,1180],{"class":280},"\"redis\"",[263,1182,647],{"class":273},[263,1184,1185,1188,1191],{"class":265,"line":516},[263,1186,1187],{"class":273},"      url: ",[263,1189,1190],{"class":280},"\"redis://localhost:6379\"",[263,1192,647],{"class":273},[263,1194,1195],{"class":265,"line":524},[263,1196,1197],{"class":273},"    },\n",[263,1199,1200],{"class":265,"line":530},[263,1201,1115],{"class":273},[263,1203,1204],{"class":265,"line":535},[263,1205,1093],{"class":273},[263,1207,1208,1210,1212,1214,1216,1218,1221,1223],{"class":265,"line":568},[263,1209,1098],{"class":280},[263,1211,1101],{"class":273},[263,1213,341],{"class":340},[263,1215,344],{"class":269},[263,1217,347],{"class":340},[263,1219,1220],{"class":273},", base: ",[263,1222,1180],{"class":280},[263,1224,1110],{"class":273},[263,1226,1227],{"class":265,"line":616},[263,1228,1115],{"class":273},[263,1230,1231],{"class":265,"line":621},[263,1232,527],{"class":273},[229,1234,1126],{"id":1126},[225,1236,1237,1238,1241],{},"Nitro 将缓存数据存储在 ",[236,1239,1240],{},"cache"," 存储挂载点中。",[1243,1244,1245,1255],"ul",{},[1246,1247,1248,1249,357],"li",{},"在生产环境中，默认使用 ",[248,1250,1254],{"href":1251,"rel":1252},"https://unstorage.unjs.io/drivers/memory",[1253],"nofollow","memory driver",[1246,1256,1257,1258,1263,1264,1267],{},"在开发环境中，使用 ",[248,1259,1262],{"href":1260,"rel":1261},"https://unstorage.unjs.io/drivers/fs",[1253],"filesystem driver","，写入临时目录（",[236,1265,1266],{},".nitro/cache","）。",[225,1269,1270,1271,1274,1275,1277],{},"要覆盖生产存储，请使用 ",[236,1272,1273],{},"storage"," 选项设置 ",[236,1276,1240],{}," 挂载点：",[254,1279,1281],{"className":256,"code":1280,"filename":1056,"language":259,"meta":5,"style":5},"import { defineNitroConfig } from \"nitro/config\";\n\nexport default defineNitroConfig({\n  storage: {\n    cache: {\n      driver: 'redis',\n      /* Redis 连接器选项 */\n    }\n  }\n})\n",[236,1282,1283,1295,1299,1309,1313,1318,1327,1333,1338,1343],{"__ignoreMap":5},[263,1284,1285,1287,1289,1291,1293],{"class":265,"line":266},[263,1286,270],{"class":269},[263,1288,1065],{"class":273},[263,1290,277],{"class":269},[263,1292,1070],{"class":280},[263,1294,284],{"class":273},[263,1296,1297],{"class":265,"line":287},[263,1298,291],{"emptyLinePlaceholder":290},[263,1300,1301,1303,1305,1307],{"class":265,"line":294},[263,1302,297],{"class":269},[263,1304,300],{"class":269},[263,1306,1085],{"class":303},[263,1308,1088],{"class":273},[263,1310,1311],{"class":265,"line":323},[263,1312,1167],{"class":273},[263,1314,1315],{"class":265,"line":334},[263,1316,1317],{"class":273},"    cache: {\n",[263,1319,1320,1322,1325],{"class":265,"line":511},[263,1321,1177],{"class":273},[263,1323,1324],{"class":280},"'redis'",[263,1326,647],{"class":273},[263,1328,1329],{"class":265,"line":516},[263,1330,1332],{"class":1331},"sCsY4","      /* Redis 连接器选项 */\n",[263,1334,1335],{"class":265,"line":524},[263,1336,1337],{"class":273},"    }\n",[263,1339,1340],{"class":265,"line":530},[263,1341,1342],{"class":273},"  }\n",[263,1344,1345],{"class":265,"line":535},[263,1346,1347],{"class":273},"})\n",[225,1349,1350,1351,1354],{},"在开发环境，您也可以通过 ",[236,1352,1353],{},"devStorage"," 选项覆盖缓存挂载点：",[254,1356,1358],{"className":256,"code":1357,"filename":1056,"language":259,"meta":5,"style":5},"import { defineNitroConfig } from \"nitro/config\";\n\nexport default defineNitroConfig({\n  storage: {\n    cache: {\n      // 生产环境缓存存储\n    },\n  },\n  devStorage: {\n    cache: {\n      driver: 'redis',\n      /* Redis 连接器选项 */\n    }\n  }\n})\n",[236,1359,1360,1372,1376,1386,1390,1394,1399,1403,1407,1412,1416,1424,1428,1432,1436],{"__ignoreMap":5},[263,1361,1362,1364,1366,1368,1370],{"class":265,"line":266},[263,1363,270],{"class":269},[263,1365,1065],{"class":273},[263,1367,277],{"class":269},[263,1369,1070],{"class":280},[263,1371,284],{"class":273},[263,1373,1374],{"class":265,"line":287},[263,1375,291],{"emptyLinePlaceholder":290},[263,1377,1378,1380,1382,1384],{"class":265,"line":294},[263,1379,297],{"class":269},[263,1381,300],{"class":269},[263,1383,1085],{"class":303},[263,1385,1088],{"class":273},[263,1387,1388],{"class":265,"line":323},[263,1389,1167],{"class":273},[263,1391,1392],{"class":265,"line":334},[263,1393,1317],{"class":273},[263,1395,1396],{"class":265,"line":511},[263,1397,1398],{"class":1331},"      // 生产环境缓存存储\n",[263,1400,1401],{"class":265,"line":516},[263,1402,1197],{"class":273},[263,1404,1405],{"class":265,"line":524},[263,1406,1115],{"class":273},[263,1408,1409],{"class":265,"line":530},[263,1410,1411],{"class":273},"  devStorage: {\n",[263,1413,1414],{"class":265,"line":535},[263,1415,1317],{"class":273},[263,1417,1418,1420,1422],{"class":265,"line":568},[263,1419,1177],{"class":273},[263,1421,1324],{"class":280},[263,1423,647],{"class":273},[263,1425,1426],{"class":265,"line":616},[263,1427,1332],{"class":1331},[263,1429,1430],{"class":265,"line":621},[263,1431,1337],{"class":273},[263,1433,1434],{"class":265,"line":629},[263,1435,1342],{"class":273},[263,1437,1438],{"class":265,"line":635},[263,1439,1347],{"class":273},[229,1441,1442],{"id":1442},"选项",[225,1444,1445,1447,1448,1450],{},[236,1446,238],{}," 和 ",[236,1449,402],{}," 函数接受以下选项：",[1452,1453,1454,1467,1476,1489,1502,1511,1525,1541,1553,1563,1571],"field-group",{},[1455,1456,1458],"field",{"name":1130,"type":1457},"string",[225,1459,1460,1461,1464,1465,357],{},"用于缓存的存储挂载点名称。",[1462,1463],"br",{},"\n默认值为 ",[236,1466,1240],{},[1455,1468,1470],{"name":1469,"type":1457},"name",[225,1471,1472,1473,357],{},"缓存名称，若未提供则从函数名推断，默认值为 ",[236,1474,1475],{},"'_'",[1455,1477,1479],{"name":1478,"type":1457},"group",[225,1480,1481,1482,1485,1486,357],{},"缓存分组。事件处理器默认为 ",[236,1483,1484],{},"'nitro/handlers'","，函数默认为 ",[236,1487,1488],{},"'nitro/functions'",[1455,1490,1493],{"name":1491,"type":1492},"getKey()","(...args) => string",[225,1494,1495,1496,1498,1499,1501],{},"接收与原始函数相同参数并返回缓存键（",[236,1497,1457],{},"）的函数。",[1462,1500],{},"\n若不提供，将使用内置哈希函数根据参数生成键。",[1455,1503,1505],{"name":1504,"type":1457},"integrity",[225,1506,1507,1508,1510],{},"用于使缓存失效的值（变动时失效）。",[1462,1509],{},"\n默认基于函数代码计算，在开发环境用于函数代码变更时失效缓存。",[1455,1512,1515],{"name":1513,"type":1514},"maxAge","number",[225,1516,1517,1518,1520,1521,1524],{},"缓存最大有效时间（秒）。",[1462,1519],{},"\n默认 ",[236,1522,1523],{},"1","（秒）。",[1455,1526,1528],{"name":1527,"type":1514},"staleMaxAge",[225,1529,1530,1531,1534,1535,1520,1537,1540],{},"过期缓存最大有效时间（秒）。设置为 ",[236,1532,1533],{},"-1"," 时启用后台更新同时返回过期缓存（SWR）。",[1462,1536],{},[236,1538,1539],{},"0","（禁用）。",[1455,1542,1545],{"name":1543,"type":1544},"swr","boolean",[225,1546,1547,1548,1520,1550,357],{},"是否启用 stale-while-revalidate 行为，在异步后台更新时提供过期响应。",[1462,1549],{},[236,1551,1552],{},"true",[1455,1554,1557],{"name":1555,"type":1556},"shouldInvalidateCache()","(...args) => boolean",[225,1558,1559,1560,1562],{},"返回 ",[236,1561,1544],{},"，决定是否使当前缓存失效并创建新缓存。",[1455,1564,1566],{"name":1565,"type":1556},"shouldBypassCache()",[225,1567,1559,1568,1570],{},[236,1569,1544],{},"，决定是否绕过当前缓存但不失效现有缓存条目。",[1455,1572,1574],{"name":372,"type":1573},"string[]",[225,1575,1576,1577,1582,1583,1586],{},"用于缓存的请求头数组，",[248,1578,1581],{"href":1579,"rel":1580},"https://github.com/nitrojs/nitro/issues/1031",[1253],"了解更多","。多租户环境中可传递 ",[236,1584,1585],{},"['host', 'x-forwarded-host']","，以确保这些请求头被考虑且缓存针对每个租户唯一。",[229,1588,1589],{"id":1589},"缓存键和失效",[225,1591,1592,1594,1595,1597],{},[236,1593,402],{}," 或 ",[236,1596,238],{}," 生成缓存键的模式如下：",[254,1599,1601],{"className":256,"code":1600,"language":259,"meta":5,"style":5},"`${options.group}:${options.name}:${options.getKey(...args)}.json`\n",[236,1602,1603],{"__ignoreMap":5},[263,1604,1605,1608,1610,1613,1615,1618,1620,1622,1624,1626,1628,1630,1633,1635,1638,1641,1644],{"class":265,"line":266},[263,1606,1607],{"class":280},"`${",[263,1609,251],{"class":273},[263,1611,1612],{"class":280},".",[263,1614,1478],{"class":273},[263,1616,1617],{"class":280},"}:${",[263,1619,251],{"class":273},[263,1621,1612],{"class":280},[263,1623,1469],{"class":273},[263,1625,1617],{"class":280},[263,1627,251],{"class":273},[263,1629,1612],{"class":280},[263,1631,1632],{"class":303},"getKey",[263,1634,441],{"class":280},[263,1636,1637],{"class":269},"...",[263,1639,1640],{"class":273},"args",[263,1642,1643],{"class":280},")",[263,1645,1646],{"class":280},"}.json`\n",[225,1648,1649],{},"例如，以下缓存函数：",[254,1651,1653],{"className":256,"code":1652,"language":259,"meta":5,"style":5},"import { defineCachedFunction } from \"nitro/runtime\";\n\nconst getAccessToken = defineCachedFunction(() => {\n  return String(Date.now())\n}, {\n  maxAge: 10,\n  name: \"getAccessToken\",\n  getKey: () => \"default\"\n});\n",[236,1654,1655,1668,1672,1689,1705,1709,1718,1727,1739],{"__ignoreMap":5},[263,1656,1657,1659,1662,1664,1666],{"class":265,"line":266},[263,1658,270],{"class":269},[263,1660,1661],{"class":273}," { defineCachedFunction } ",[263,1663,277],{"class":269},[263,1665,281],{"class":280},[263,1667,284],{"class":273},[263,1669,1670],{"class":265,"line":287},[263,1671,291],{"emptyLinePlaceholder":290},[263,1673,1674,1676,1679,1681,1683,1685,1687],{"class":265,"line":294},[263,1675,538],{"class":269},[263,1677,1678],{"class":340}," getAccessToken",[263,1680,485],{"class":269},[263,1682,545],{"class":303},[263,1684,500],{"class":273},[263,1686,317],{"class":269},[263,1688,320],{"class":273},[263,1690,1691,1693,1696,1699,1702],{"class":265,"line":323},[263,1692,326],{"class":269},[263,1694,1695],{"class":303}," String",[263,1697,1698],{"class":273},"(Date.",[263,1700,1701],{"class":303},"now",[263,1703,1704],{"class":273},"())\n",[263,1706,1707],{"class":265,"line":334},[263,1708,632],{"class":273},[263,1710,1711,1713,1716],{"class":265,"line":511},[263,1712,638],{"class":273},[263,1714,1715],{"class":340},"10",[263,1717,647],{"class":273},[263,1719,1720,1722,1725],{"class":265,"line":516},[263,1721,653],{"class":273},[263,1723,1724],{"class":280},"\"getAccessToken\"",[263,1726,647],{"class":273},[263,1728,1729,1731,1734,1736],{"class":265,"line":524},[263,1730,664],{"class":303},[263,1732,1733],{"class":273},": () ",[263,1735,317],{"class":269},[263,1737,1738],{"class":280}," \"default\"\n",[263,1740,1741],{"class":265,"line":530},[263,1742,527],{"class":273},[225,1744,1745],{},"其缓存键将为：",[254,1747,1749],{"className":256,"code":1748,"language":259,"meta":5,"style":5},"nitro:functions:getAccessToken:default.json\n",[236,1750,1751],{"__ignoreMap":5},[263,1752,1753,1756,1758,1761,1763,1766],{"class":265,"line":266},[263,1754,1755],{"class":303},"nitro",[263,1757,556],{"class":273},[263,1759,1760],{"class":303},"functions",[263,1762,556],{"class":273},[263,1764,1765],{"class":303},"getAccessToken",[263,1767,1768],{"class":273},":default.json\n",[225,1770,1771],{},"您可以通过以下代码使缓存函数的条目失效：",[254,1773,1775],{"className":256,"code":1774,"language":259,"meta":5,"style":5},"import { useStorage } from \"nitro/runtime\";\n\nawait useStorage('cache').removeItem('nitro:functions:getAccessToken:default.json')\n",[236,1776,1777,1790,1794],{"__ignoreMap":5},[263,1778,1779,1781,1784,1786,1788],{"class":265,"line":266},[263,1780,270],{"class":269},[263,1782,1783],{"class":273}," { useStorage } ",[263,1785,277],{"class":269},[263,1787,281],{"class":280},[263,1789,284],{"class":273},[263,1791,1792],{"class":265,"line":287},[263,1793,291],{"emptyLinePlaceholder":290},[263,1795,1796,1799,1802,1804,1807,1809,1812,1814,1817],{"class":265,"line":294},[263,1797,1798],{"class":269},"await",[263,1800,1801],{"class":303}," useStorage",[263,1803,441],{"class":273},[263,1805,1806],{"class":280},"'cache'",[263,1808,593],{"class":273},[263,1810,1811],{"class":303},"removeItem",[263,1813,441],{"class":273},[263,1815,1816],{"class":280},"'nitro:functions:getAccessToken:default.json'",[263,1818,508],{"class":273},[1820,1821,1822],"read-more",{"to":69},[225,1823,1824],{},"更多关于 Nitro 存储的内容。",[1826,1827,1828],"style",{},"html pre.shiki code .so5gQ, html code.shiki .so5gQ{--shiki-light:#D73A49;--shiki-default:#F97583;--shiki-dark:#F97583}html pre.shiki code .slsVL, html code.shiki .slsVL{--shiki-light:#24292E;--shiki-default:#E1E4E8;--shiki-dark:#E1E4E8}html pre.shiki code .sfrk1, html code.shiki .sfrk1{--shiki-light:#032F62;--shiki-default:#9ECBFF;--shiki-dark:#9ECBFF}html pre.shiki code .shcOC, html code.shiki .shcOC{--shiki-light:#6F42C1;--shiki-default:#B392F0;--shiki-dark:#B392F0}html pre.shiki code .sQHwn, html code.shiki .sQHwn{--shiki-light:#E36209;--shiki-default:#FFAB70;--shiki-dark:#FFAB70}html pre.shiki code .suiK_, html code.shiki .suiK_{--shiki-light:#005CC5;--shiki-default:#79B8FF;--shiki-dark:#79B8FF}html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html pre.shiki code .sCsY4, html code.shiki .sCsY4{--shiki-light:#6A737D;--shiki-default:#6A737D;--shiki-dark:#6A737D}",{"title":5,"searchDepth":287,"depth":287,"links":1830},[1831,1832,1835,1836,1837,1838],{"id":231,"depth":287,"text":231},{"id":396,"depth":287,"text":396,"children":1833},[1834],{"id":767,"depth":294,"text":767},{"id":1042,"depth":287,"text":1042},{"id":1126,"depth":287,"text":1126},{"id":1442,"depth":287,"text":1442},{"id":1589,"depth":287,"text":1589},"Nitro 提供了一种构建在存储层之上的缓存系统。","md",{"icon":66},{"icon":66},{"title":63,"description":1839},"2aODoGrU_BpkHrvdRnWB8FUqinBAp_j42sKPH156dGU",[1846,1848],{"title":58,"path":59,"stem":60,"description":1847,"icon":61,"children":-1},"使用服务器入口可创建全局中间件，该中间件会在所有路由匹配之前运行。",{"title":68,"path":69,"stem":70,"description":1849,"icon":71,"children":-1},"Nitro 提供了一个内置存储层，可以抽象文件系统、数据库或任何其他数据源。",1761554644072]