[{"data":1,"prerenderedAt":677},["ShallowReactive",2],{"navigation":3,"-deploy-providers-heroku":216,"-deploy-providers-heroku-surround":672},[4,83,208,213],{"title":5,"path":6,"stem":7,"children":8,"icon":82},"","/docs","1.docs/1.index",[9,12,17,22,27,32,37,42,47,52,57,62,67,72,77],{"title":10,"path":6,"stem":7,"icon":11},"介绍","i-lucide-compass",{"title":13,"path":14,"stem":15,"icon":16},"快速开始","/docs/quick-start","1.docs/2.quick-start","i-lucide-zap",{"title":18,"path":19,"stem":20,"icon":21},"渲染器","/docs/renderer","1.docs/4.renderer","ri:layout-masonry-line",{"title":23,"path":24,"stem":25,"icon":26},"服务器路由","/docs/routing","1.docs/5.routing","ri:direction-line",{"title":28,"path":29,"stem":30,"icon":31},"资源","/docs/assets","1.docs/50.assets","ri:image-2-line",{"title":33,"path":34,"stem":35,"icon":36},"配置","/docs/configuration","1.docs/50.configuration","ri:settings-3-line",{"title":38,"path":39,"stem":40,"icon":41},"数据库","/docs/database","1.docs/50.database","ri:database-2-line",{"title":43,"path":44,"stem":45,"icon":46},"生命周期","/docs/lifecycle","1.docs/50.lifecycle","i-lucide-layers",{"title":48,"path":49,"stem":50,"icon":51},"插件","/docs/plugins","1.docs/50.plugins","ri:plug-line",{"title":53,"path":54,"stem":55,"icon":56},"任务","/docs/tasks","1.docs/50.tasks","codicon:run-all",{"title":58,"path":59,"stem":60,"icon":61},"服务器入口","/docs/server-entry","1.docs/6.server-entry","ri:server-line",{"title":63,"path":64,"stem":65,"icon":66},"缓存","/docs/cache","1.docs/7.cache","ri:speed-line",{"title":68,"path":69,"stem":70,"icon":71},"KV 存储","/docs/storage","1.docs/8.storage","carbon:datastore",{"title":73,"path":74,"stem":75,"icon":76},"迁移指南","/docs/migration","1.docs/99.migration","ri:arrow-right-up-line",{"title":78,"path":79,"stem":80,"icon":81},"夜间通道","/docs/nightly","1.docs/99.nightly","ri:moon-fill","i-lucide-book-open",{"title":84,"path":85,"stem":86,"children":87,"icon":89},"概述","/deploy","2.deploy/0.index",[88,90,111],{"title":84,"path":85,"stem":86,"icon":89},"ri:upload-cloud-2-line",{"title":91,"path":92,"stem":93,"children":94,"page":110},"Runtimes","/deploy/runtimes","2.deploy/10.runtimes",[95,100,105],{"title":96,"path":97,"stem":98,"icon":99},"Node.js","/deploy/runtimes/node","2.deploy/10.runtimes/1.node","akar-icons:node-fill",{"title":101,"path":102,"stem":103,"icon":104},"Bun","/deploy/runtimes/bun","2.deploy/10.runtimes/bun","simple-icons:bun",{"title":106,"path":107,"stem":108,"icon":109},"Deno","/deploy/runtimes/deno","2.deploy/10.runtimes/deno","simple-icons:deno",false,{"title":112,"path":113,"stem":114,"children":115,"page":110},"Providers","/deploy/providers","2.deploy/20.providers",[116,120,124,128,132,136,140,144,148,152,156,160,164,168,172,176,180,184,188,192,196,200,204],{"title":117,"path":118,"stem":119},"Alwaysdata","/deploy/providers/alwaysdata","2.deploy/20.providers/alwaysdata",{"title":121,"path":122,"stem":123},"AWS Lambda","/deploy/providers/aws","2.deploy/20.providers/aws",{"title":125,"path":126,"stem":127},"AWS Amplify","/deploy/providers/aws-amplify","2.deploy/20.providers/aws-amplify",{"title":129,"path":130,"stem":131},"Azure","/deploy/providers/azure","2.deploy/20.providers/azure",{"title":133,"path":134,"stem":135},"Cleavr","/deploy/providers/cleavr","2.deploy/20.providers/cleavr",{"title":137,"path":138,"stem":139},"Cloudflare","/deploy/providers/cloudflare","2.deploy/20.providers/cloudflare",{"title":141,"path":142,"stem":143},"Deno Deploy","/deploy/providers/deno-deploy","2.deploy/20.providers/deno-deploy",{"title":145,"path":146,"stem":147},"DigitalOcean","/deploy/providers/digitalocean","2.deploy/20.providers/digitalocean",{"title":149,"path":150,"stem":151},"Firebase","/deploy/providers/firebase","2.deploy/20.providers/firebase",{"title":153,"path":154,"stem":155},"Flightcontrol","/deploy/providers/flightcontrol","2.deploy/20.providers/flightcontrol",{"title":157,"path":158,"stem":159},"Genezio","/deploy/providers/genezio","2.deploy/20.providers/genezio",{"title":161,"path":162,"stem":163},"GitHub Pages","/deploy/providers/github-pages","2.deploy/20.providers/github-pages",{"title":165,"path":166,"stem":167},"GitLab Pages","/deploy/providers/gitlab-pages","2.deploy/20.providers/gitlab-pages",{"title":169,"path":170,"stem":171},"Heroku","/deploy/providers/heroku","2.deploy/20.providers/heroku",{"title":173,"path":174,"stem":175},"IIS","/deploy/providers/iis","2.deploy/20.providers/iis",{"title":177,"path":178,"stem":179},"Koyeb","/deploy/providers/koyeb","2.deploy/20.providers/koyeb",{"title":181,"path":182,"stem":183},"Netlify","/deploy/providers/netlify","2.deploy/20.providers/netlify",{"title":185,"path":186,"stem":187},"Platform.sh","/deploy/providers/platform-sh","2.deploy/20.providers/platform-sh",{"title":189,"path":190,"stem":191},"Render.com","/deploy/providers/render","2.deploy/20.providers/render",{"title":193,"path":194,"stem":195},"StormKit","/deploy/providers/stormkit","2.deploy/20.providers/stormkit",{"title":197,"path":198,"stem":199},"Vercel","/deploy/providers/vercel","2.deploy/20.providers/vercel",{"title":201,"path":202,"stem":203},"Zeabur","/deploy/providers/zeabur","2.deploy/20.providers/zeabur",{"title":205,"path":206,"stem":207},"Zerops","/deploy/providers/zerops","2.deploy/20.providers/zerops",{"title":33,"path":209,"stem":210,"children":211,"icon":36},"/config","3.config/0.index",[212],{"title":33,"path":209,"stem":210,"icon":36},{"title":5,"path":214,"stem":215},"/","index",{"id":217,"title":169,"body":218,"description":666,"extension":667,"meta":668,"navigation":669,"path":170,"seo":670,"stem":171,"__hash__":671},"content/2.deploy/20.providers/heroku.md",{"type":219,"value":220,"toc":662},"minimark",[221,233,238,243,377,381,658],[222,223,224,228,229],"p",{},[225,226,227],"strong",{},"预设:"," ",[230,231,232],"code",{},"heroku",[234,235],"read-more",{"title":236,"to":237},"heroku.com","https://heroku.com/",[239,240,242],"h2",{"id":241},"使用-heroku-cli","使用 heroku CLI",[244,245,247,274,292,310],"steps",{"level":246},"4",[248,249,250,251],"h4",{},"创建一个新的 Heroku 应用。",[252,253,257],"pre",{"className":254,"code":255,"language":256,"meta":5,"style":5},"language-bash shiki shiki-themes github-light github-dark github-dark","heroku create myapp\n","bash",[230,258,259],{"__ignoreMap":5},[260,261,264,267,271],"span",{"class":262,"line":263},"line",1,[260,265,232],{"class":266},"shcOC",[260,268,270],{"class":269},"sfrk1"," create",[260,272,273],{"class":269}," myapp\n",[248,275,276,277],{},"配置 Heroku 使用 nodejs 构建包。",[252,278,280],{"className":254,"code":279,"language":256,"meta":5,"style":5},"heroku buildpacks:set heroku/nodejs\n",[230,281,282],{"__ignoreMap":5},[260,283,284,286,289],{"class":262,"line":263},[260,285,232],{"class":266},[260,287,288],{"class":269}," buildpacks:set",[260,290,291],{"class":269}," heroku/nodejs\n",[248,293,294,295],{},"配置你的应用。",[252,296,298],{"className":254,"code":297,"language":256,"meta":5,"style":5},"heroku config:set NITRO_PRESET=heroku\n",[230,299,300],{"__ignoreMap":5},[260,301,302,304,307],{"class":262,"line":263},[260,303,232],{"class":266},[260,305,306],{"class":269}," config:set",[260,308,309],{"class":269}," NITRO_PRESET=heroku\n",[248,311,312,313,316,317,320,321,324,325],{},"确保在你的 ",[230,314,315],{},"package.json"," 文件中有 ",[230,318,319],{},"start"," 和 ",[230,322,323],{},"build"," 命令。",[252,326,330],{"className":327,"code":328,"language":329,"meta":5,"style":5},"language-json5 shiki shiki-themes github-light github-dark github-dark","\"scripts\": {\n  \"build\": \"nitro build\", // 如果使用 nuxt 则为 `nuxt build`\n  \"start\": \"node .output/server/index.mjs\"\n}\n","json5",[230,331,332,341,360,371],{"__ignoreMap":5},[260,333,334,337],{"class":262,"line":263},[260,335,336],{"class":269},"\"scripts\"",[260,338,340],{"class":339},"slsVL",": {\n",[260,342,344,347,350,353,356],{"class":262,"line":343},2,[260,345,346],{"class":269},"  \"build\"",[260,348,349],{"class":339},": ",[260,351,352],{"class":269},"\"nitro build\"",[260,354,355],{"class":339},", ",[260,357,359],{"class":358},"sCsY4","// 如果使用 nuxt 则为 `nuxt build`\n",[260,361,363,366,368],{"class":262,"line":362},3,[260,364,365],{"class":269},"  \"start\"",[260,367,349],{"class":339},[260,369,370],{"class":269},"\"node .output/server/index.mjs\"\n",[260,372,374],{"class":262,"line":373},4,[260,375,376],{"class":339},"}\n",[239,378,380],{"id":379},"使用-nginx","使用 nginx",[244,382,383,394,431,445,532,641,655],{"level":246},[248,384,385,386,393],{},"在",[387,388,392],"a",{"href":389,"rel":390},"https://github.com/heroku/heroku-buildpack-nginx.git",[391],"nofollow","这里","添加 heroku Nginx 构建包。",[248,395,396,397,400,401],{},"在你的 ",[230,398,399],{},"nitro.config"," 中更改为 'node' 预设。",[252,402,404],{"className":327,"code":403,"language":329,"meta":5,"style":5},"\"nitro\": {\n   \"preset\":\"node\",\n}\n",[230,405,406,413,427],{"__ignoreMap":5},[260,407,408,411],{"class":262,"line":263},[260,409,410],{"class":269},"\"nitro\"",[260,412,340],{"class":339},[260,414,415,418,421,424],{"class":262,"line":343},[260,416,417],{"class":269},"   \"preset\"",[260,419,420],{"class":339},":",[260,422,423],{"class":269},"\"node\"",[260,425,426],{"class":339},",\n",[260,428,429],{"class":262,"line":362},[260,430,376],{"class":339},[248,432,433,434,437,438,441,442,444],{},"从构建包文档的 ",[225,435,436],{},"现有应用"," 部分，需要两个关键步骤以使其运行。",[439,440],"br",{},"步骤 1: 在 'tmp/nginx.socket' 上监听一个套接字",[439,443],{},"\n步骤 2: 当你的应用准备好接受连接时创建文件 '/tmp/app-initialized'",[248,446,447,448],{},"创建自定义应用运行器，例如：在项目根目录创建 apprunner.mjs（或任何其他首选位置），在此文件中，创建一个服务器，使用 node 预设生成的监听器，然后按照构建包文档的详细说明在套接字上监听。",[252,449,453],{"className":450,"code":451,"language":452,"meta":5,"style":5},"language-ts shiki shiki-themes github-light github-dark github-dark","import { createServer } from 'node:http'\nimport { listener } from './.output/server/index.mjs'\n\nconst server = createServer(listener)\n\nserver.listen('/tmp/nginx.socket') // 遵循构建包文档\n","ts",[230,454,455,470,482,488,506,511],{"__ignoreMap":5},[260,456,457,461,464,467],{"class":262,"line":263},[260,458,460],{"class":459},"so5gQ","import",[260,462,463],{"class":339}," { createServer } ",[260,465,466],{"class":459},"from",[260,468,469],{"class":269}," 'node:http'\n",[260,471,472,474,477,479],{"class":262,"line":343},[260,473,460],{"class":459},[260,475,476],{"class":339}," { listener } ",[260,478,466],{"class":459},[260,480,481],{"class":269}," './.output/server/index.mjs'\n",[260,483,484],{"class":262,"line":362},[260,485,487],{"emptyLinePlaceholder":486},true,"\n",[260,489,490,493,497,500,503],{"class":262,"line":373},[260,491,492],{"class":459},"const",[260,494,496],{"class":495},"suiK_"," server",[260,498,499],{"class":459}," =",[260,501,502],{"class":266}," createServer",[260,504,505],{"class":339},"(listener)\n",[260,507,509],{"class":262,"line":508},5,[260,510,487],{"emptyLinePlaceholder":486},[260,512,514,517,520,523,526,529],{"class":262,"line":513},6,[260,515,516],{"class":339},"server.",[260,518,519],{"class":266},"listen",[260,521,522],{"class":339},"(",[260,524,525],{"class":269},"'/tmp/nginx.socket'",[260,527,528],{"class":339},") ",[260,530,531],{"class":358},"// 遵循构建包文档\n",[248,533,534,535],{},"若要创建 'tmp/app-initialized' 文件，使用一个 nitro 插件，在项目根目录创建文件 'initServer.ts'（或任何其他首选位置）。",[252,536,538],{"className":450,"code":537,"language":452,"meta":5,"style":5},"import fs from \"fs\"\n\nexport default defineNitroPlugin((nitroApp) => {\n   if((process.env.NODE_ENV || 'development') != 'development') {\n      fs.openSync('/tmp/app-initialized', 'w')\n   }\n})\n",[230,539,540,552,556,582,609,630,635],{"__ignoreMap":5},[260,541,542,544,547,549],{"class":262,"line":263},[260,543,460],{"class":459},[260,545,546],{"class":339}," fs ",[260,548,466],{"class":459},[260,550,551],{"class":269}," \"fs\"\n",[260,553,554],{"class":262,"line":343},[260,555,487],{"emptyLinePlaceholder":486},[260,557,558,561,564,567,570,574,576,579],{"class":262,"line":362},[260,559,560],{"class":459},"export",[260,562,563],{"class":459}," default",[260,565,566],{"class":266}," defineNitroPlugin",[260,568,569],{"class":339},"((",[260,571,573],{"class":572},"sQHwn","nitroApp",[260,575,528],{"class":339},[260,577,578],{"class":459},"=>",[260,580,581],{"class":339}," {\n",[260,583,584,587,590,593,596,599,601,604,606],{"class":262,"line":373},[260,585,586],{"class":459},"   if",[260,588,589],{"class":339},"((process.env.",[260,591,592],{"class":495},"NODE_ENV",[260,594,595],{"class":459}," ||",[260,597,598],{"class":269}," 'development'",[260,600,528],{"class":339},[260,602,603],{"class":459},"!=",[260,605,598],{"class":269},[260,607,608],{"class":339},") {\n",[260,610,611,614,617,619,622,624,627],{"class":262,"line":508},[260,612,613],{"class":339},"      fs.",[260,615,616],{"class":266},"openSync",[260,618,522],{"class":339},[260,620,621],{"class":269},"'/tmp/app-initialized'",[260,623,355],{"class":339},[260,625,626],{"class":269},"'w'",[260,628,629],{"class":339},")\n",[260,631,632],{"class":262,"line":513},[260,633,634],{"class":339},"   }\n",[260,636,638],{"class":262,"line":637},7,[260,639,640],{"class":339},"})\n",[248,642,643,644],{},"最后，在项目根目录创建文件 'Procfile'，通过 Procfile，告诉 heroku 启动 nginx 并使用自定义的 apprunner.mjs 启动服务器。",[252,645,649],{"className":646,"code":647,"language":648,"meta":5,"style":5},"language-procfile shiki shiki-themes github-light github-dark github-dark","web: bin/start-nginx node apprunner.mjs\n","procfile",[230,650,651],{"__ignoreMap":5},[260,652,653],{"class":262,"line":263},[260,654,647],{},[248,656,657],{},"附加：创建文件 'config/nginx.conf.erb' 来自定义你的 nginx 配置。使用 node 预设时，默认情况下，静态文件处理程序不会生成，你可以使用 nginx 来服务静态文件，只需在服务器块中添加正确的位置规则，或者，通过将 serveStatic 设置为 true 强制 node 预设生成静态文件的处理程序。",[659,660,661],"style",{},"html pre.shiki code .shcOC, html code.shiki .shcOC{--shiki-light:#6F42C1;--shiki-default:#B392F0;--shiki-dark:#B392F0}html pre.shiki code .sfrk1, html code.shiki .sfrk1{--shiki-light:#032F62;--shiki-default:#9ECBFF;--shiki-dark:#9ECBFF}html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html pre.shiki code .so5gQ, html code.shiki .so5gQ{--shiki-light:#D73A49;--shiki-default:#F97583;--shiki-dark:#F97583}html pre.shiki code .slsVL, html code.shiki .slsVL{--shiki-light:#24292E;--shiki-default:#E1E4E8;--shiki-dark:#E1E4E8}html pre.shiki code .suiK_, html code.shiki .suiK_{--shiki-light:#005CC5;--shiki-default:#79B8FF;--shiki-dark:#79B8FF}html pre.shiki code .sCsY4, html code.shiki .sCsY4{--shiki-light:#6A737D;--shiki-default:#6A737D;--shiki-dark:#6A737D}html pre.shiki code .sQHwn, html code.shiki .sQHwn{--shiki-light:#E36209;--shiki-default:#FFAB70;--shiki-dark:#FFAB70}",{"title":5,"searchDepth":343,"depth":343,"links":663},[664,665],{"id":241,"depth":343,"text":242},{"id":379,"depth":343,"text":380},"将 Nitro 应用部署到 Heroku。","md",{},{},{"title":169,"description":666},"bt0YLxhhdydbzk13vJNMQihcR0EQTkRq7xcRRwPBJDM",[673,675],{"title":165,"path":166,"stem":167,"description":674,"children":-1},"将 Nitro 应用程序部署到 GitLab Pages。",{"title":173,"path":174,"stem":175,"description":676,"children":-1},"将 Nitro 应用部署到 IIS。",1761554646194]