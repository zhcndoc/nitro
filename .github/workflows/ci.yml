name: ci

on:
  push: { branches: [main] }
  pull_request: { branches: [main] }

jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - uses: actions/checkout@v5
      - run: npm i -g --force corepack && corepack enable
      - uses: actions/setup-node@v5
        with: { node-version: lts/*, cache: pnpm }
      - uses: oven-sh/setup-bun@v2
        if: ${{ matrix.os != 'windows-latest' }}
        with: { bun-version: latest }
      - uses: denoland/setup-deno@v1
        if: ${{ matrix.os != 'windows-latest' }}
        with: { deno-version: v2.x }
      - run: pnpm install
      - run: pnpm stub && pnpm lint
        if: ${{ matrix.os != 'windows-latest' }}
      - run: pnpm test:types
        if: ${{ matrix.os != 'windows-latest' }}
      - run: pnpm build
      - run: pnpm vitest --coverage
      # - uses: codecov/codecov-action@v3
      - run: pnpm dlx pkg-pr-new publish
        if: ${{ matrix.os == 'ubuntu-latest' }}

  publish:
    runs-on: ubuntu-latest
    permissions: { id-token: write, contents: read }
    needs: tests
    if: contains('refs/heads/main', github.ref) && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v5
        with: { fetch-depth: 0 }
      - run: npm i -fg corepack && corepack enable
      - uses: actions/setup-node@v5
        with: { node-version: lts/*, cache: "pnpm" }
      - run: pnpm install
      - run: pnpm changelogen --bump --canary nightly
      - run: npm i -g npm@latest && npm publish --tag latest
